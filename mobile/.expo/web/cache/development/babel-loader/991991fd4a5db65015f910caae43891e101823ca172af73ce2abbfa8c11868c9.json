{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/App.tsx\";\nimport React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { queryClient } from \"./src/api/queryClient\";\nimport { NavigationProvider } from \"./src/navigation/NavigationContext\";\nimport { AuthProvider } from \"./src/context/AuthContext\";\nimport Navigator from \"./src/navigation/Navigator\";\nimport TestApiConnection from \"./src/TestApiConnection\";\nimport { StatusBar } from 'expo-status-bar';\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLogBox.ignoreLogs(['Async Storage has been extracted from react-native core', 'ViewPropTypes will be removed from React Native', 'VirtualizedLists should never be nested']);\nvar TEST_MODE_DEFAULT = false;\nexport default function App() {\n  var _useState = useState(TEST_MODE_DEFAULT),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMode = _useState2[0],\n    setTestMode = _useState2[1];\n  var toggleTestMode = function toggleTestMode() {\n    return setTestMode(!testMode);\n  };\n  return _jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: _jsxDEV(SafeAreaProvider, {\n      children: [_jsxDEV(StatusBar, {\n        style: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.testModeToggle,\n        children: _jsxDEV(Button, {\n          title: testMode ? \"Exit API Test\" : \"Test API Connection\",\n          onPress: toggleTestMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), testMode ? _jsxDEV(TestApiConnection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : _jsxDEV(AuthProvider, {\n        children: _jsxDEV(NavigationProvider, {\n          children: _jsxDEV(Navigator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  testModeToggle: {\n    position: 'absolute',\n    top: 40,\n    right: 10,\n    zIndex: 100,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 8,\n    padding: 5\n  }\n});","map":{"version":3,"names":["React","useState","SafeAreaProvider","QueryClientProvider","queryClient","NavigationProvider","AuthProvider","Navigator","TestApiConnection","StatusBar","LogBox","View","Button","StyleSheet","jsxDEV","_jsxDEV","ignoreLogs","TEST_MODE_DEFAULT","App","_useState","_useState2","_slicedToArray","testMode","setTestMode","toggleTestMode","client","children","style","fileName","_jsxFileName","lineNumber","columnNumber","styles","testModeToggle","title","onPress","create","position","top","right","zIndex","backgroundColor","borderRadius","padding"],"sources":["/home/runner/workspace/mobile/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { queryClient } from './src/api/queryClient';\nimport { NavigationProvider } from './src/navigation/NavigationContext';\nimport { AuthProvider } from './src/context/AuthContext';\nimport Navigator from './src/navigation/Navigator';\nimport TestApiConnection from './src/TestApiConnection';\nimport { StatusBar } from 'expo-status-bar';\nimport { LogBox, View, Text, Button, StyleSheet } from 'react-native';\n\n// Ignore specific warnings\nLogBox.ignoreLogs([\n  'Async Storage has been extracted from react-native core',\n  'ViewPropTypes will be removed from React Native',\n  'VirtualizedLists should never be nested',\n]);\n\n// Toggle this for testing api connectivity\nconst TEST_MODE_DEFAULT = false;\n\nexport default function App() {\n  const [testMode, setTestMode] = useState(TEST_MODE_DEFAULT);\n  \n  // Toggle between normal mode and test mode\n  const toggleTestMode = () => setTestMode(!testMode);\n  \n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <StatusBar style=\"dark\" />\n        \n        {/* Button to toggle test mode */}\n        <View style={styles.testModeToggle}>\n          <Button\n            title={testMode ? \"Exit API Test\" : \"Test API Connection\"}\n            onPress={toggleTestMode}\n          />\n        </View>\n        \n        {testMode ? (\n          <TestApiConnection />\n        ) : (\n          <AuthProvider>\n            <NavigationProvider>\n              <Navigator />\n            </NavigationProvider>\n          </AuthProvider>\n        )}\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  testModeToggle: {\n    position: 'absolute',\n    top: 40,\n    right: 10,\n    zIndex: 100,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 8,\n    padding: 5,\n  },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,WAAW;AACpB,SAASC,kBAAkB;AAC3B,SAASC,YAAY;AACrB,OAAOC,SAAS;AAChB,OAAOC,iBAAiB;AACxB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI5CL,MAAM,CAACM,UAAU,CAAC,CAChB,yDAAyD,EACzD,iDAAiD,EACjD,yCAAyC,CAC1C,CAAC;AAGF,IAAMC,iBAAiB,GAAG,KAAK;AAE/B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAgClB,QAAQ,CAACgB,iBAAiB,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAG5B,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA;IAAA,OAASD,WAAW,CAAC,CAACD,QAAQ,CAAC;EAAA;EAEnD,OACEP,OAAA,CAACZ,mBAAmB;IAACsB,MAAM,EAAErB,WAAY;IAAAsB,QAAA,EACvCX,OAAA,CAACb,gBAAgB;MAAAwB,QAAA,GACfX,OAAA,CAACN,SAAS;QAACkB,KAAK,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG1BhB,OAAA,CAACJ,IAAI;QAACgB,KAAK,EAAEK,MAAM,CAACC,cAAe;QAAAP,QAAA,EACjCX,OAAA,CAACH,MAAM;UACLsB,KAAK,EAAEZ,QAAQ,GAAG,eAAe,GAAG,qBAAsB;UAC1Da,OAAO,EAAEX;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAENT,QAAQ,GACPP,OAAA,CAACP,iBAAiB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAErBhB,OAAA,CAACT,YAAY;QAAAoB,QAAA,EACXX,OAAA,CAACV,kBAAkB;UAAAqB,QAAA,EACjBX,OAAA,CAACR,SAAS;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACf;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAE1B;AAEA,IAAMC,MAAM,GAAGnB,UAAU,CAACuB,MAAM,CAAC;EAC/BH,cAAc,EAAE;IACdI,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,GAAG;IACXC,eAAe,EAAE,0BAA0B;IAC3CC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;EACX;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}