{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/screens/AuthScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Text, TextInput, Button, Portal, Dialog, useTheme, Card, SegmentedButtons, HelperText, ActivityIndicator } from 'react-native-paper';\nimport { useAuth } from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthScreen() {\n  var navigation = useNavigation();\n  var theme = useTheme();\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    isLoading = _useAuth.isLoading,\n    loginMutation = _useAuth.loginMutation,\n    registerMutation = _useAuth.registerMutation;\n  var _useState = useState('login'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginUsername = _useState4[0],\n    setLoginUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loginPassword = _useState6[0],\n    setLoginPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loginPasswordVisible = _useState8[0],\n    setLoginPasswordVisible = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    registerName = _useState10[0],\n    setRegisterName = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    registerUsername = _useState12[0],\n    setRegisterUsername = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    registerEmail = _useState14[0],\n    setRegisterEmail = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    registerPassword = _useState16[0],\n    setRegisterPassword = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    registerConfirmPassword = _useState18[0],\n    setRegisterConfirmPassword = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    registerPasswordVisible = _useState20[0],\n    setRegisterPasswordVisible = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    registerConfirmPasswordVisible = _useState22[0],\n    setRegisterConfirmPasswordVisible = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    errorDialogVisible = _useState24[0],\n    setErrorDialogVisible = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    errorMessage = _useState26[0],\n    setErrorMessage = _useState26[1];\n  useEffect(function () {\n    if (user) {\n      navigation.navigate('Main');\n    }\n  }, [user, navigation]);\n  var validateRegisterPassword = function validateRegisterPassword() {\n    if (registerPassword.length < 8) {\n      return 'Password must be at least 8 characters';\n    }\n    return '';\n  };\n  var validateConfirmPassword = function validateConfirmPassword() {\n    if (registerConfirmPassword && registerPassword !== registerConfirmPassword) {\n      return 'Passwords do not match';\n    }\n    return '';\n  };\n  var isLoginFormValid = loginUsername.trim() && loginPassword.trim();\n  var isRegisterFormValid = registerName.trim() && registerUsername.trim() && registerEmail.trim() && registerPassword.length >= 8 && registerPassword === registerConfirmPassword;\n  var handleLogin = function handleLogin() {\n    if (isLoginFormValid) {\n      loginMutation.mutate({\n        username: loginUsername,\n        password: loginPassword\n      }, {\n        onError: function onError(error) {\n          setErrorMessage(error.message || 'Login failed. Please check your credentials.');\n          setErrorDialogVisible(true);\n        }\n      });\n    }\n  };\n  var handleRegister = function handleRegister() {\n    if (isRegisterFormValid) {\n      registerMutation.mutate({\n        name: registerName,\n        username: registerUsername,\n        email: registerEmail,\n        password: registerPassword\n      }, {\n        onError: function onError(error) {\n          setErrorMessage(error.message || 'Registration failed. Please try again.');\n          setErrorDialogVisible(true);\n        }\n      });\n    }\n  };\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 64 : 0,\n    children: [_jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxDEV(View, {\n        style: styles.content,\n        children: [_jsxDEV(View, {\n          style: styles.logoContainer,\n          children: [_jsxDEV(Image, {\n            source: require(\"../assets/app-logo.png\"),\n            style: styles.logo,\n            resizeMode: \"contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            variant: \"headlineLarge\",\n            style: styles.appTitle,\n            children: \"Prayer Pipeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyLarge\",\n            style: styles.appSubtitle,\n            children: \"Connect, Share, and Pray Together\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), _jsxDEV(Card, {\n          style: styles.authCard,\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(SegmentedButtons, {\n              value: activeTab,\n              onValueChange: function onValueChange(value) {\n                return setActiveTab(value);\n              },\n              buttons: [{\n                value: 'login',\n                label: 'Login'\n              }, {\n                value: 'register',\n                label: 'Register'\n              }],\n              style: styles.tabButtons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), activeTab === 'login' && _jsxDEV(View, {\n              style: styles.formContainer,\n              children: [_jsxDEV(TextInput, {\n                label: \"Username\",\n                value: loginUsername,\n                onChangeText: setLoginUsername,\n                mode: \"outlined\",\n                style: styles.input,\n                autoCapitalize: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), _jsxDEV(TextInput, {\n                label: \"Password\",\n                value: loginPassword,\n                onChangeText: setLoginPassword,\n                secureTextEntry: !loginPasswordVisible,\n                right: _jsxDEV(TextInput.Icon, {\n                  icon: loginPasswordVisible ? 'eye-off' : 'eye',\n                  onPress: function onPress() {\n                    return setLoginPasswordVisible(!loginPasswordVisible);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this),\n                mode: \"outlined\",\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), _jsxDEV(Button, {\n                mode: \"text\",\n                onPress: function onPress() {\n                  return navigation.navigate('ForgotPassword');\n                },\n                style: styles.forgotPasswordButton,\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), _jsxDEV(Button, {\n                mode: \"contained\",\n                onPress: handleLogin,\n                style: styles.submitButton,\n                loading: loginMutation.isPending,\n                disabled: !isLoginFormValid || loginMutation.isPending,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), activeTab === 'register' && _jsxDEV(View, {\n              style: styles.formContainer,\n              children: [_jsxDEV(TextInput, {\n                label: \"Full Name\",\n                value: registerName,\n                onChangeText: setRegisterName,\n                mode: \"outlined\",\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), _jsxDEV(TextInput, {\n                label: \"Username\",\n                value: registerUsername,\n                onChangeText: setRegisterUsername,\n                mode: \"outlined\",\n                style: styles.input,\n                autoCapitalize: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), _jsxDEV(TextInput, {\n                label: \"Email Address\",\n                value: registerEmail,\n                onChangeText: setRegisterEmail,\n                mode: \"outlined\",\n                style: styles.input,\n                keyboardType: \"email-address\",\n                autoCapitalize: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), _jsxDEV(TextInput, {\n                label: \"Password\",\n                value: registerPassword,\n                onChangeText: setRegisterPassword,\n                secureTextEntry: !registerPasswordVisible,\n                right: _jsxDEV(TextInput.Icon, {\n                  icon: registerPasswordVisible ? 'eye-off' : 'eye',\n                  onPress: function onPress() {\n                    return setRegisterPasswordVisible(!registerPasswordVisible);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this),\n                mode: \"outlined\",\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), registerPassword ? _jsxDEV(HelperText, {\n                type: validateRegisterPassword() ? 'error' : 'info',\n                visible: !!registerPassword,\n                children: validateRegisterPassword() || 'Password strength: ' + (registerPassword.length >= 12 ? 'Strong' : registerPassword.length >= 8 ? 'Medium' : 'Weak')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this) : null, _jsxDEV(TextInput, {\n                label: \"Confirm Password\",\n                value: registerConfirmPassword,\n                onChangeText: setRegisterConfirmPassword,\n                secureTextEntry: !registerConfirmPasswordVisible,\n                right: _jsxDEV(TextInput.Icon, {\n                  icon: registerConfirmPasswordVisible ? 'eye-off' : 'eye',\n                  onPress: function onPress() {\n                    return setRegisterConfirmPasswordVisible(!registerConfirmPasswordVisible);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this),\n                mode: \"outlined\",\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), registerConfirmPassword ? _jsxDEV(HelperText, {\n                type: validateConfirmPassword() ? 'error' : 'info',\n                visible: !!registerConfirmPassword,\n                children: validateConfirmPassword() || 'Passwords match'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this) : null, _jsxDEV(Button, {\n                mode: \"contained\",\n                onPress: handleRegister,\n                style: styles.submitButton,\n                loading: registerMutation.isPending,\n                disabled: !isRegisterFormValid || registerMutation.isPending,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), _jsxDEV(Portal, {\n      children: _jsxDEV(Dialog, {\n        visible: errorDialogVisible,\n        onDismiss: function onDismiss() {\n          return setErrorDialogVisible(false);\n        },\n        children: [_jsxDEV(Dialog.Title, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), _jsxDEV(Dialog.Content, {\n          children: _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), _jsxDEV(Dialog.Actions, {\n          children: _jsxDEV(Button, {\n            onPress: function onPress() {\n              return setErrorDialogVisible(false);\n            },\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  content: {\n    flex: 1,\n    padding: 24\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 32,\n    marginTop: 32\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 16\n  },\n  appTitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  appSubtitle: {\n    textAlign: 'center',\n    opacity: 0.7\n  },\n  authCard: {\n    marginBottom: 32\n  },\n  tabButtons: {\n    marginBottom: 16\n  },\n  formContainer: {\n    paddingVertical: 8\n  },\n  input: {\n    marginBottom: 16\n  },\n  forgotPasswordButton: {\n    alignSelf: 'flex-end',\n    marginTop: -8,\n    marginBottom: 16\n  },\n  submitButton: {\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","Image","KeyboardAvoidingView","Platform","useNavigation","Text","TextInput","Button","Portal","Dialog","useTheme","Card","SegmentedButtons","HelperText","ActivityIndicator","useAuth","jsxDEV","_jsxDEV","AuthScreen","navigation","theme","_useAuth","user","isLoading","loginMutation","registerMutation","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","loginUsername","setLoginUsername","_useState5","_useState6","loginPassword","setLoginPassword","_useState7","_useState8","loginPasswordVisible","setLoginPasswordVisible","_useState9","_useState10","registerName","setRegisterName","_useState11","_useState12","registerUsername","setRegisterUsername","_useState13","_useState14","registerEmail","setRegisterEmail","_useState15","_useState16","registerPassword","setRegisterPassword","_useState17","_useState18","registerConfirmPassword","setRegisterConfirmPassword","_useState19","_useState20","registerPasswordVisible","setRegisterPasswordVisible","_useState21","_useState22","registerConfirmPasswordVisible","setRegisterConfirmPasswordVisible","_useState23","_useState24","errorDialogVisible","setErrorDialogVisible","_useState25","_useState26","errorMessage","setErrorMessage","navigate","validateRegisterPassword","length","validateConfirmPassword","isLoginFormValid","trim","isRegisterFormValid","handleLogin","mutate","username","password","onError","error","message","handleRegister","name","email","style","styles","loadingContainer","children","size","color","colors","primary","fileName","_jsxFileName","lineNumber","columnNumber","container","behavior","OS","undefined","keyboardVerticalOffset","contentContainerStyle","scrollContent","content","logoContainer","source","require","logo","resizeMode","variant","appTitle","appSubtitle","authCard","Content","value","onValueChange","buttons","label","tabButtons","formContainer","onChangeText","mode","input","autoCapitalize","secureTextEntry","right","Icon","icon","onPress","forgotPasswordButton","submitButton","loading","isPending","disabled","keyboardType","type","visible","onDismiss","Title","Actions","create","flex","backgroundColor","justifyContent","alignItems","flexGrow","padding","marginBottom","marginTop","width","height","textAlign","fontWeight","opacity","paddingVertical","alignSelf"],"sources":["/home/runner/workspace/mobile/src/screens/AuthScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Image, KeyboardAvoidingView, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '@navigation/AppNavigator';\nimport {\n  Text,\n  TextInput,\n  Button,\n  Portal,\n  Dialog,\n  useTheme,\n  Card,\n  SegmentedButtons,\n  HelperText,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { useAuth } from '@hooks/useAuth';\n\nexport default function AuthScreen() {\n  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\n  const theme = useTheme();\n  const { user, isLoading, loginMutation, registerMutation } = useAuth();\n  \n  const [activeTab, setActiveTab] = useState<'login' | 'register'>('login');\n  \n  // Login form state\n  const [loginUsername, setLoginUsername] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginPasswordVisible, setLoginPasswordVisible] = useState(false);\n  \n  // Register form state\n  const [registerName, setRegisterName] = useState('');\n  const [registerUsername, setRegisterUsername] = useState('');\n  const [registerEmail, setRegisterEmail] = useState('');\n  const [registerPassword, setRegisterPassword] = useState('');\n  const [registerConfirmPassword, setRegisterConfirmPassword] = useState('');\n  const [registerPasswordVisible, setRegisterPasswordVisible] = useState(false);\n  const [registerConfirmPasswordVisible, setRegisterConfirmPasswordVisible] = useState(false);\n  \n  // Error handling\n  const [errorDialogVisible, setErrorDialogVisible] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (user) {\n      navigation.navigate('Main');\n    }\n  }, [user, navigation]);\n\n  // Validate registration form\n  const validateRegisterPassword = () => {\n    if (registerPassword.length < 8) {\n      return 'Password must be at least 8 characters';\n    }\n    return '';\n  };\n\n  const validateConfirmPassword = () => {\n    if (registerConfirmPassword && registerPassword !== registerConfirmPassword) {\n      return 'Passwords do not match';\n    }\n    return '';\n  };\n\n  const isLoginFormValid = loginUsername.trim() && loginPassword.trim();\n  \n  const isRegisterFormValid = \n    registerName.trim() && \n    registerUsername.trim() && \n    registerEmail.trim() && \n    registerPassword.length >= 8 && \n    registerPassword === registerConfirmPassword;\n\n  const handleLogin = () => {\n    if (isLoginFormValid) {\n      loginMutation.mutate(\n        { username: loginUsername, password: loginPassword },\n        {\n          onError: (error) => {\n            setErrorMessage(error.message || 'Login failed. Please check your credentials.');\n            setErrorDialogVisible(true);\n          }\n        }\n      );\n    }\n  };\n\n  const handleRegister = () => {\n    if (isRegisterFormValid) {\n      registerMutation.mutate(\n        {\n          name: registerName,\n          username: registerUsername,\n          email: registerEmail,\n          password: registerPassword,\n        },\n        {\n          onError: (error) => {\n            setErrorMessage(error.message || 'Registration failed. Please try again.');\n            setErrorDialogVisible(true);\n          }\n        }\n      );\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      keyboardVerticalOffset={Platform.OS === 'ios' ? 64 : 0}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.content}>\n          {/* App Logo and Title */}\n          <View style={styles.logoContainer}>\n            <Image\n              source={require('@/assets/app-logo.png')}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n            <Text variant=\"headlineLarge\" style={styles.appTitle}>\n              Prayer Pipeline\n            </Text>\n            <Text variant=\"bodyLarge\" style={styles.appSubtitle}>\n              Connect, Share, and Pray Together\n            </Text>\n          </View>\n          \n          {/* Auth Card */}\n          <Card style={styles.authCard}>\n            <Card.Content>\n              <SegmentedButtons\n                value={activeTab}\n                onValueChange={(value) => setActiveTab(value as 'login' | 'register')}\n                buttons={[\n                  { value: 'login', label: 'Login' },\n                  { value: 'register', label: 'Register' },\n                ]}\n                style={styles.tabButtons}\n              />\n              \n              {/* Login Form */}\n              {activeTab === 'login' && (\n                <View style={styles.formContainer}>\n                  <TextInput\n                    label=\"Username\"\n                    value={loginUsername}\n                    onChangeText={setLoginUsername}\n                    mode=\"outlined\"\n                    style={styles.input}\n                    autoCapitalize=\"none\"\n                  />\n                  \n                  <TextInput\n                    label=\"Password\"\n                    value={loginPassword}\n                    onChangeText={setLoginPassword}\n                    secureTextEntry={!loginPasswordVisible}\n                    right={\n                      <TextInput.Icon\n                        icon={loginPasswordVisible ? 'eye-off' : 'eye'}\n                        onPress={() => setLoginPasswordVisible(!loginPasswordVisible)}\n                      />\n                    }\n                    mode=\"outlined\"\n                    style={styles.input}\n                  />\n                  \n                  <Button\n                    mode=\"text\"\n                    onPress={() => navigation.navigate('ForgotPassword')}\n                    style={styles.forgotPasswordButton}\n                  >\n                    Forgot Password?\n                  </Button>\n                  \n                  <Button\n                    mode=\"contained\"\n                    onPress={handleLogin}\n                    style={styles.submitButton}\n                    loading={loginMutation.isPending}\n                    disabled={!isLoginFormValid || loginMutation.isPending}\n                  >\n                    Login\n                  </Button>\n                </View>\n              )}\n              \n              {/* Register Form */}\n              {activeTab === 'register' && (\n                <View style={styles.formContainer}>\n                  <TextInput\n                    label=\"Full Name\"\n                    value={registerName}\n                    onChangeText={setRegisterName}\n                    mode=\"outlined\"\n                    style={styles.input}\n                  />\n                  \n                  <TextInput\n                    label=\"Username\"\n                    value={registerUsername}\n                    onChangeText={setRegisterUsername}\n                    mode=\"outlined\"\n                    style={styles.input}\n                    autoCapitalize=\"none\"\n                  />\n                  \n                  <TextInput\n                    label=\"Email Address\"\n                    value={registerEmail}\n                    onChangeText={setRegisterEmail}\n                    mode=\"outlined\"\n                    style={styles.input}\n                    keyboardType=\"email-address\"\n                    autoCapitalize=\"none\"\n                  />\n                  \n                  <TextInput\n                    label=\"Password\"\n                    value={registerPassword}\n                    onChangeText={setRegisterPassword}\n                    secureTextEntry={!registerPasswordVisible}\n                    right={\n                      <TextInput.Icon\n                        icon={registerPasswordVisible ? 'eye-off' : 'eye'}\n                        onPress={() => setRegisterPasswordVisible(!registerPasswordVisible)}\n                      />\n                    }\n                    mode=\"outlined\"\n                    style={styles.input}\n                  />\n                  {registerPassword ? (\n                    <HelperText type={validateRegisterPassword() ? 'error' : 'info'} visible={!!registerPassword}>\n                      {validateRegisterPassword() || 'Password strength: ' + (registerPassword.length >= 12 ? 'Strong' : registerPassword.length >= 8 ? 'Medium' : 'Weak')}\n                    </HelperText>\n                  ) : null}\n                  \n                  <TextInput\n                    label=\"Confirm Password\"\n                    value={registerConfirmPassword}\n                    onChangeText={setRegisterConfirmPassword}\n                    secureTextEntry={!registerConfirmPasswordVisible}\n                    right={\n                      <TextInput.Icon\n                        icon={registerConfirmPasswordVisible ? 'eye-off' : 'eye'}\n                        onPress={() => setRegisterConfirmPasswordVisible(!registerConfirmPasswordVisible)}\n                      />\n                    }\n                    mode=\"outlined\"\n                    style={styles.input}\n                  />\n                  {registerConfirmPassword ? (\n                    <HelperText type={validateConfirmPassword() ? 'error' : 'info'} visible={!!registerConfirmPassword}>\n                      {validateConfirmPassword() || 'Passwords match'}\n                    </HelperText>\n                  ) : null}\n                  \n                  <Button\n                    mode=\"contained\"\n                    onPress={handleRegister}\n                    style={styles.submitButton}\n                    loading={registerMutation.isPending}\n                    disabled={!isRegisterFormValid || registerMutation.isPending}\n                  >\n                    Register\n                  </Button>\n                </View>\n              )}\n            </Card.Content>\n          </Card>\n        </View>\n      </ScrollView>\n      \n      {/* Error Dialog */}\n      <Portal>\n        <Dialog visible={errorDialogVisible} onDismiss={() => setErrorDialogVisible(false)}>\n          <Dialog.Title>Error</Dialog.Title>\n          <Dialog.Content>\n            <Text variant=\"bodyMedium\">{errorMessage}</Text>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setErrorDialogVisible(false)}>OK</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  content: {\n    flex: 1,\n    padding: 24,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 16,\n  },\n  appTitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  appSubtitle: {\n    textAlign: 'center',\n    opacity: 0.7,\n  },\n  authCard: {\n    marginBottom: 32,\n  },\n  tabButtons: {\n    marginBottom: 16,\n  },\n  formContainer: {\n    paddingVertical: 8,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  forgotPasswordButton: {\n    alignSelf: 'flex-end',\n    marginTop: -8,\n    marginBottom: 16,\n  },\n  submitButton: {\n    marginTop: 8,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}