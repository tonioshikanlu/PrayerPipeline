{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/screens/ForgotPasswordScreen.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useNavigation } from \"../navigation/NavigationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ForgotPasswordScreen = function ForgotPasswordScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useAuth = useAuth(),\n    forgotPassword = _useAuth.forgotPassword,\n    isLoading = _useAuth.isLoading;\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate,\n    goBack = _useNavigation.goBack;\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!email) {\n        alert('Please enter your email address');\n        return;\n      }\n      var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        alert('Please enter a valid email address');\n        return;\n      }\n      var success = yield forgotPassword(email);\n      if (success) {\n        navigate('ResetPassword', {\n          email: email\n        });\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    keyboardShouldPersistTaps: \"handled\",\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.subtitle,\n          children: \"Enter your email to receive a password reset link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.form,\n        children: [_jsxDEV(View, {\n          style: styles.inputContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.label,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: email,\n            onChangeText: setEmail,\n            placeholder: \"Enter your email\",\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleSubmit,\n          disabled: isLoading,\n          children: isLoading ? _jsxDEV(ActivityIndicator, {\n            color: \"#ffffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this) : _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.footer,\n        children: _jsxDEV(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigate('Login');\n          },\n          children: _jsxDEV(Text, {\n            style: styles.footerLink,\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#ffffff'\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#6366F1',\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    textAlign: 'center'\n  },\n  form: {\n    marginBottom: 24\n  },\n  inputContainer: {\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 6,\n    color: '#374151'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#D1D5DB',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#6366F1',\n    borderRadius: 8,\n    padding: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 8\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  footer: {\n    alignItems: 'center'\n  },\n  footerLink: {\n    color: '#6366F1',\n    fontWeight: '500',\n    fontSize: 16\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","ScrollView","useAuth","useNavigation","jsxDEV","_jsxDEV","ForgotPasswordScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useAuth","forgotPassword","isLoading","_useNavigation","navigate","goBack","handleSubmit","_ref","_asyncToGenerator","alert","emailRegex","test","success","apply","arguments","contentContainerStyle","styles","scrollContainer","keyboardShouldPersistTaps","children","style","container","header","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","subtitle","form","inputContainer","label","input","value","onChangeText","placeholder","keyboardType","autoCapitalize","autoCorrect","button","onPress","disabled","color","buttonText","footer","footerLink","create","flexGrow","flex","padding","justifyContent","backgroundColor","alignItems","marginBottom","fontSize","fontWeight","textAlign","borderWidth","borderColor","borderRadius","marginTop"],"sources":["/home/runner/workspace/mobile/src/screens/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ActivityIndicator,\n  ScrollView,\n} from 'react-native';\nimport { useAuth } from '../hooks/useAuth';\nimport { useNavigation } from '../navigation/NavigationContext';\n\nconst ForgotPasswordScreen: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const { forgotPassword, isLoading } = useAuth();\n  const { navigate, goBack } = useNavigation();\n\n  const handleSubmit = async () => {\n    if (!email) {\n      alert('Please enter your email address');\n      return;\n    }\n\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      alert('Please enter a valid email address');\n      return;\n    }\n\n    const success = await forgotPassword(email);\n    if (success) {\n      // Navigate to reset password screen with token from email\n      // In a real app, user would get token from email\n      navigate('ResetPassword', { email });\n    }\n  };\n\n  return (\n    <ScrollView \n      contentContainerStyle={styles.scrollContainer}\n      keyboardShouldPersistTaps=\"handled\"\n    >\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Forgot Password</Text>\n          <Text style={styles.subtitle}>Enter your email to receive a password reset link</Text>\n        </View>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n            />\n          </View>\n\n          <TouchableOpacity\n            style={styles.button}\n            onPress={handleSubmit}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <ActivityIndicator color=\"#ffffff\" />\n            ) : (\n              <Text style={styles.buttonText}>Reset Password</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.footer}>\n          <TouchableOpacity onPress={() => navigate('Login')}>\n            <Text style={styles.footerLink}>Back to Login</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#6366F1',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    textAlign: 'center',\n  },\n  form: {\n    marginBottom: 24,\n  },\n  inputContainer: {\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 6,\n    color: '#374151',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#D1D5DB',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n  },\n  button: {\n    backgroundColor: '#6366F1',\n    borderRadius: 8,\n    padding: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 8,\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  footer: {\n    alignItems: 'center',\n  },\n  footerLink: {\n    color: '#6366F1',\n    fontWeight: '500',\n    fontSize: 16,\n  },\n});\n\nexport default ForgotPasswordScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}