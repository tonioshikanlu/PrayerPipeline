{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/screens/SettingsScreen.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Text, List, Switch, Avatar, Divider, Button, TextInput, Card, useTheme, Surface, SegmentedButtons } from 'react-native-paper';\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useNotifications } from \"../hooks/useNotifications\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SettingsScreen() {\n  var _user$name,\n    _this = this;\n  var navigation = useNavigation();\n  var theme = useTheme();\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    logoutMutation = _useAuth.logoutMutation;\n  var _useNotifications = useNotifications(),\n    isNotificationsEnabled = _useNotifications.isNotificationsEnabled,\n    enableNotifications = _useNotifications.enableNotifications,\n    disableNotifications = _useNotifications.disableNotifications;\n  var _useState = useState('profile'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState(isNotificationsEnabled),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pushNotificationsEnabled = _useState4[0],\n    setPushNotificationsEnabled = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    emailNotificationsEnabled = _useState6[0],\n    setEmailNotificationsEnabled = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newRequestNotifications = _useState8[0],\n    setNewRequestNotifications = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    commentNotifications = _useState10[0],\n    setCommentNotifications = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    reminderNotifications = _useState12[0],\n    setReminderNotifications = _useState12[1];\n  useEffect(function () {\n    setPushNotificationsEnabled(isNotificationsEnabled);\n  }, [isNotificationsEnabled]);\n  var _useForm = useForm({\n      defaultValues: {\n        name: (user == null ? void 0 : user.name) || '',\n        email: (user == null ? void 0 : user.email) || '',\n        phone: (user == null ? void 0 : user.phone) || '',\n        bio: (user == null ? void 0 : user.bio) || ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmitProfile = function onSubmitProfile(data) {\n    console.log('Profile update data:', data);\n  };\n  var handleLogout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield logoutMutation.mutateAsync();\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var navigateToOrganizations = function navigateToOrganizations() {\n    navigation.navigate('Organizations');\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(SegmentedButtons, {\n      value: activeTab,\n      onValueChange: setActiveTab,\n      buttons: [{\n        value: 'profile',\n        label: 'Profile'\n      }, {\n        value: 'notifications',\n        label: 'Notifications'\n      }, {\n        value: 'reminders',\n        label: 'Reminders'\n      }, {\n        value: 'account',\n        label: 'Account'\n      }],\n      style: styles.tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.content,\n      children: [activeTab === 'profile' && _jsxDEV(View, {\n        children: [_jsxDEV(Surface, {\n          style: styles.profileHeader,\n          children: [_jsxDEV(Avatar.Text, {\n            size: 80,\n            label: (user == null ? void 0 : (_user$name = user.name) == null ? void 0 : _user$name.substring(0, 2)) || 'U',\n            style: styles.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            variant: \"headlineSmall\",\n            style: styles.profileName,\n            children: user == null ? void 0 : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            style: styles.profileUsername,\n            children: [\"@\", user == null ? void 0 : user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), _jsxDEV(Card, {\n          style: styles.profileForm,\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Controller, {\n              control: control,\n              rules: {\n                required: 'Name is required'\n              },\n              render: function render(_ref2) {\n                var _ref2$field = _ref2.field,\n                  onChange = _ref2$field.onChange,\n                  onBlur = _ref2$field.onBlur,\n                  value = _ref2$field.value;\n                return _jsxDEV(TextInput, {\n                  label: \"Name\",\n                  value: value,\n                  onBlur: onBlur,\n                  onChangeText: onChange,\n                  error: !!errors.name,\n                  style: styles.input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, _this);\n              },\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), errors.name && _jsxDEV(Text, {\n              style: styles.errorText,\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), _jsxDEV(Controller, {\n              control: control,\n              rules: {\n                required: 'Email is required',\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: 'Invalid email address'\n                }\n              },\n              render: function render(_ref3) {\n                var _ref3$field = _ref3.field,\n                  onChange = _ref3$field.onChange,\n                  onBlur = _ref3$field.onBlur,\n                  value = _ref3$field.value;\n                return _jsxDEV(TextInput, {\n                  label: \"Email\",\n                  value: value,\n                  onBlur: onBlur,\n                  onChangeText: onChange,\n                  error: !!errors.email,\n                  style: styles.input,\n                  keyboardType: \"email-address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, _this);\n              },\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), errors.email && _jsxDEV(Text, {\n              style: styles.errorText,\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), _jsxDEV(Controller, {\n              control: control,\n              render: function render(_ref4) {\n                var _ref4$field = _ref4.field,\n                  onChange = _ref4$field.onChange,\n                  onBlur = _ref4$field.onBlur,\n                  value = _ref4$field.value;\n                return _jsxDEV(TextInput, {\n                  label: \"Phone\",\n                  value: value,\n                  onBlur: onBlur,\n                  onChangeText: onChange,\n                  error: !!errors.phone,\n                  style: styles.input,\n                  keyboardType: \"phone-pad\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, _this);\n              },\n              name: \"phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), _jsxDEV(Controller, {\n              control: control,\n              render: function render(_ref5) {\n                var _ref5$field = _ref5.field,\n                  onChange = _ref5$field.onChange,\n                  onBlur = _ref5$field.onBlur,\n                  value = _ref5$field.value;\n                return _jsxDEV(TextInput, {\n                  label: \"Bio\",\n                  value: value,\n                  onBlur: onBlur,\n                  onChangeText: onChange,\n                  error: !!errors.bio,\n                  style: styles.input,\n                  multiline: true,\n                  numberOfLines: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, _this);\n              },\n              name: \"bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: handleSubmit(onSubmitProfile),\n              style: styles.submitButton,\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), activeTab === 'notifications' && _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Text, {\n            variant: \"titleMedium\",\n            style: styles.sectionTitle,\n            children: \"Notification Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), _jsxDEV(List.Item, {\n            title: \"Push Notifications\",\n            description: \"Receive notifications on your device\",\n            right: function right() {\n              return _jsxDEV(Switch, {\n                value: pushNotificationsEnabled,\n                onValueChange: function onValueChange(value) {\n                  setPushNotificationsEnabled(value);\n                  if (value) {\n                    enableNotifications();\n                  } else {\n                    disableNotifications();\n                  }\n                },\n                color: theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), _jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), _jsxDEV(List.Item, {\n            title: \"Email Notifications\",\n            description: \"Receive notifications via email\",\n            right: function right() {\n              return _jsxDEV(Switch, {\n                value: emailNotificationsEnabled,\n                onValueChange: setEmailNotificationsEnabled,\n                color: theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), _jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            variant: \"titleMedium\",\n            style: [styles.sectionTitle, {\n              marginTop: 20\n            }],\n            children: \"Notification Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), _jsxDEV(List.Item, {\n            title: \"New Prayer Requests\",\n            description: \"When new prayer requests are added to your groups\",\n            right: function right() {\n              return _jsxDEV(Switch, {\n                value: newRequestNotifications,\n                onValueChange: setNewRequestNotifications,\n                color: theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), _jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), _jsxDEV(List.Item, {\n            title: \"Comments\",\n            description: \"When someone comments on your prayer requests\",\n            right: function right() {\n              return _jsxDEV(Switch, {\n                value: commentNotifications,\n                onValueChange: setCommentNotifications,\n                color: theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), _jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), _jsxDEV(List.Item, {\n            title: \"Prayer Reminders\",\n            description: \"Get reminders for your scheduled prayers\",\n            right: function right() {\n              return _jsxDEV(Switch, {\n                value: reminderNotifications,\n                onValueChange: setReminderNotifications,\n                color: theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), activeTab === 'reminders' && _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Text, {\n            variant: \"titleMedium\",\n            style: styles.sectionTitle,\n            children: \"Prayer Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            variant: \"bodyMedium\",\n            style: styles.reminderDescription,\n            children: \"Set up scheduled reminders to pray for specific requests or groups.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.emptyReminders,\n            children: [_jsxDEV(Text, {\n              variant: \"bodyLarge\",\n              style: {\n                textAlign: 'center'\n              },\n              children: \"You don't have any prayer reminders yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {},\n              style: styles.addReminderButton,\n              children: \"Create Reminder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), activeTab === 'account' && _jsxDEV(View, {\n        children: [_jsxDEV(Card, {\n          style: styles.card,\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              variant: \"titleMedium\",\n              style: styles.sectionTitle,\n              children: \"Organizations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), _jsxDEV(List.Item, {\n              title: \"Manage Organizations\",\n              description: \"Create, join, or leave organizations\",\n              left: function left(props) {\n                return _jsxDEV(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                  icon: \"office-building\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 34\n                }, _this);\n              },\n              onPress: navigateToOrganizations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), _jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              variant: \"titleMedium\",\n              style: [styles.sectionTitle, {\n                marginTop: 20\n              }],\n              children: \"Account Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), _jsxDEV(List.Item, {\n              title: \"Change Password\",\n              description: \"Update your account password\",\n              left: function left(props) {\n                return _jsxDEV(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                  icon: \"lock\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 34\n                }, _this);\n              },\n              onPress: function onPress() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), _jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), _jsxDEV(List.Item, {\n              title: \"Delete Account\",\n              description: \"Permanently delete your account and data\",\n              left: function left(props) {\n                return _jsxDEV(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                  icon: \"delete\",\n                  color: \"red\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 34\n                }, _this);\n              },\n              onPress: function onPress() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          mode: \"outlined\",\n          onPress: handleLogout,\n          style: styles.logoutButton,\n          icon: \"logout\",\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  tabs: {\n    margin: 16\n  },\n  content: {\n    flex: 1\n  },\n  profileHeader: {\n    alignItems: 'center',\n    padding: 20,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    borderRadius: 8\n  },\n  avatar: {\n    marginBottom: 16\n  },\n  profileName: {\n    marginBottom: 4\n  },\n  profileUsername: {\n    opacity: 0.6\n  },\n  profileForm: {\n    marginHorizontal: 16,\n    marginBottom: 16\n  },\n  input: {\n    marginBottom: 16\n  },\n  errorText: {\n    color: 'red',\n    marginTop: -12,\n    marginBottom: 16,\n    fontSize: 12\n  },\n  submitButton: {\n    marginTop: 8\n  },\n  card: {\n    margin: 16\n  },\n  sectionTitle: {\n    marginBottom: 16\n  },\n  reminderDescription: {\n    marginBottom: 24\n  },\n  emptyReminders: {\n    alignItems: 'center',\n    paddingVertical: 20\n  },\n  addReminderButton: {\n    marginTop: 16\n  },\n  logoutButton: {\n    margin: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","useNavigation","Text","List","Switch","Avatar","Divider","Button","TextInput","Card","useTheme","Surface","SegmentedButtons","useAuth","useNotifications","useForm","Controller","jsxDEV","_jsxDEV","SettingsScreen","_user$name","_this","navigation","theme","_useAuth","user","logoutMutation","_useNotifications","isNotificationsEnabled","enableNotifications","disableNotifications","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","pushNotificationsEnabled","setPushNotificationsEnabled","_useState5","_useState6","emailNotificationsEnabled","setEmailNotificationsEnabled","_useState7","_useState8","newRequestNotifications","setNewRequestNotifications","_useState9","_useState10","commentNotifications","setCommentNotifications","_useState11","_useState12","reminderNotifications","setReminderNotifications","_useForm","defaultValues","name","email","phone","bio","control","handleSubmit","errors","formState","onSubmitProfile","data","console","log","handleLogout","_ref","_asyncToGenerator","mutateAsync","error","apply","arguments","navigateToOrganizations","navigate","style","styles","container","children","value","onValueChange","buttons","label","tabs","fileName","_jsxFileName","lineNumber","columnNumber","content","profileHeader","size","substring","avatar","variant","profileName","profileUsername","username","profileForm","Content","rules","required","render","_ref2","_ref2$field","field","onChange","onBlur","onChangeText","input","errorText","message","pattern","_ref3","_ref3$field","keyboardType","_ref4","_ref4$field","_ref5","_ref5$field","multiline","numberOfLines","mode","onPress","submitButton","card","sectionTitle","Item","title","description","right","color","colors","primary","marginTop","reminderDescription","emptyReminders","textAlign","addReminderButton","left","props","Icon","_objectSpread","icon","logoutButton","create","flex","backgroundColor","margin","alignItems","padding","marginHorizontal","marginBottom","borderRadius","opacity","fontSize","paddingVertical"],"sources":["/home/runner/workspace/mobile/src/screens/SettingsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { SettingsStackParamList } from '@navigation/MainNavigator';\nimport {\n  Text,\n  List,\n  Switch,\n  Avatar,\n  Divider,\n  Button,\n  TextInput,\n  Card,\n  useTheme,\n  Surface,\n  SegmentedButtons,\n} from 'react-native-paper';\nimport { useAuth } from '@hooks/useAuth';\nimport { useNotifications } from '@hooks/useNotifications';\nimport { useForm, Controller } from 'react-hook-form';\n\ntype ProfileFormInputs = {\n  name: string;\n  email: string;\n  phone: string;\n  bio: string;\n};\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation<NativeStackNavigationProp<SettingsStackParamList>>();\n  const theme = useTheme();\n  const { user, logoutMutation } = useAuth();\n  const { isNotificationsEnabled, enableNotifications, disableNotifications } = useNotifications();\n  \n  // State for active tab\n  const [activeTab, setActiveTab] = useState('profile');\n  \n  // State for notification settings\n  const [pushNotificationsEnabled, setPushNotificationsEnabled] = useState(isNotificationsEnabled);\n  const [emailNotificationsEnabled, setEmailNotificationsEnabled] = useState(true);\n  const [newRequestNotifications, setNewRequestNotifications] = useState(true);\n  const [commentNotifications, setCommentNotifications] = useState(true);\n  const [reminderNotifications, setReminderNotifications] = useState(true);\n  \n  // Sync the push notification toggle with the notification system\n  useEffect(() => {\n    setPushNotificationsEnabled(isNotificationsEnabled);\n  }, [isNotificationsEnabled]);\n  \n  // Form for profile editing\n  const { control, handleSubmit, formState: { errors } } = useForm<ProfileFormInputs>({\n    defaultValues: {\n      name: user?.name || '',\n      email: user?.email || '',\n      phone: user?.phone || '',\n      bio: user?.bio || '',\n    },\n  });\n  \n  const onSubmitProfile = (data: ProfileFormInputs) => {\n    console.log('Profile update data:', data);\n    // Would typically call an API to update the profile here\n  };\n  \n  const handleLogout = async () => {\n    try {\n      await logoutMutation.mutateAsync();\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  \n  const navigateToOrganizations = () => {\n    navigation.navigate('Organizations');\n  };\n  \n  return (\n    <View style={styles.container}>\n      {/* Tab Selection */}\n      <SegmentedButtons\n        value={activeTab}\n        onValueChange={setActiveTab}\n        buttons={[\n          { value: 'profile', label: 'Profile' },\n          { value: 'notifications', label: 'Notifications' },\n          { value: 'reminders', label: 'Reminders' },\n          { value: 'account', label: 'Account' },\n        ]}\n        style={styles.tabs}\n      />\n      \n      <ScrollView style={styles.content}>\n        {/* Profile Tab */}\n        {activeTab === 'profile' && (\n          <View>\n            <Surface style={styles.profileHeader}>\n              <Avatar.Text\n                size={80}\n                label={user?.name?.substring(0, 2) || 'U'}\n                style={styles.avatar}\n              />\n              <Text variant=\"headlineSmall\" style={styles.profileName}>\n                {user?.name}\n              </Text>\n              <Text variant=\"bodyMedium\" style={styles.profileUsername}>\n                @{user?.username}\n              </Text>\n            </Surface>\n            \n            <Card style={styles.profileForm}>\n              <Card.Content>\n                <Controller\n                  control={control}\n                  rules={{ required: 'Name is required' }}\n                  render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput\n                      label=\"Name\"\n                      value={value}\n                      onBlur={onBlur}\n                      onChangeText={onChange}\n                      error={!!errors.name}\n                      style={styles.input}\n                    />\n                  )}\n                  name=\"name\"\n                />\n                {errors.name && (\n                  <Text style={styles.errorText}>{errors.name.message}</Text>\n                )}\n                \n                <Controller\n                  control={control}\n                  rules={{\n                    required: 'Email is required',\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: 'Invalid email address',\n                    },\n                  }}\n                  render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput\n                      label=\"Email\"\n                      value={value}\n                      onBlur={onBlur}\n                      onChangeText={onChange}\n                      error={!!errors.email}\n                      style={styles.input}\n                      keyboardType=\"email-address\"\n                    />\n                  )}\n                  name=\"email\"\n                />\n                {errors.email && (\n                  <Text style={styles.errorText}>{errors.email.message}</Text>\n                )}\n                \n                <Controller\n                  control={control}\n                  render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput\n                      label=\"Phone\"\n                      value={value}\n                      onBlur={onBlur}\n                      onChangeText={onChange}\n                      error={!!errors.phone}\n                      style={styles.input}\n                      keyboardType=\"phone-pad\"\n                    />\n                  )}\n                  name=\"phone\"\n                />\n                \n                <Controller\n                  control={control}\n                  render={({ field: { onChange, onBlur, value } }) => (\n                    <TextInput\n                      label=\"Bio\"\n                      value={value}\n                      onBlur={onBlur}\n                      onChangeText={onChange}\n                      error={!!errors.bio}\n                      style={styles.input}\n                      multiline\n                      numberOfLines={4}\n                    />\n                  )}\n                  name=\"bio\"\n                />\n                \n                <Button\n                  mode=\"contained\"\n                  onPress={handleSubmit(onSubmitProfile)}\n                  style={styles.submitButton}\n                >\n                  Update Profile\n                </Button>\n              </Card.Content>\n            </Card>\n          </View>\n        )}\n        \n        {/* Notifications Tab */}\n        {activeTab === 'notifications' && (\n          <Card style={styles.card}>\n            <Card.Content>\n              <Text variant=\"titleMedium\" style={styles.sectionTitle}>\n                Notification Preferences\n              </Text>\n              \n              <List.Item\n                title=\"Push Notifications\"\n                description=\"Receive notifications on your device\"\n                right={() => (\n                  <Switch\n                    value={pushNotificationsEnabled}\n                    onValueChange={(value) => {\n                      setPushNotificationsEnabled(value);\n                      if (value) {\n                        enableNotifications();\n                      } else {\n                        disableNotifications();\n                      }\n                    }}\n                    color={theme.colors.primary}\n                  />\n                )}\n              />\n              <Divider />\n              \n              <List.Item\n                title=\"Email Notifications\"\n                description=\"Receive notifications via email\"\n                right={() => (\n                  <Switch\n                    value={emailNotificationsEnabled}\n                    onValueChange={setEmailNotificationsEnabled}\n                    color={theme.colors.primary}\n                  />\n                )}\n              />\n              <Divider />\n              \n              <Text variant=\"titleMedium\" style={[styles.sectionTitle, { marginTop: 20 }]}>\n                Notification Types\n              </Text>\n              \n              <List.Item\n                title=\"New Prayer Requests\"\n                description=\"When new prayer requests are added to your groups\"\n                right={() => (\n                  <Switch\n                    value={newRequestNotifications}\n                    onValueChange={setNewRequestNotifications}\n                    color={theme.colors.primary}\n                  />\n                )}\n              />\n              <Divider />\n              \n              <List.Item\n                title=\"Comments\"\n                description=\"When someone comments on your prayer requests\"\n                right={() => (\n                  <Switch\n                    value={commentNotifications}\n                    onValueChange={setCommentNotifications}\n                    color={theme.colors.primary}\n                  />\n                )}\n              />\n              <Divider />\n              \n              <List.Item\n                title=\"Prayer Reminders\"\n                description=\"Get reminders for your scheduled prayers\"\n                right={() => (\n                  <Switch\n                    value={reminderNotifications}\n                    onValueChange={setReminderNotifications}\n                    color={theme.colors.primary}\n                  />\n                )}\n              />\n            </Card.Content>\n          </Card>\n        )}\n        \n        {/* Reminders Tab */}\n        {activeTab === 'reminders' && (\n          <Card style={styles.card}>\n            <Card.Content>\n              <Text variant=\"titleMedium\" style={styles.sectionTitle}>\n                Prayer Reminders\n              </Text>\n              \n              <Text variant=\"bodyMedium\" style={styles.reminderDescription}>\n                Set up scheduled reminders to pray for specific requests or groups.\n              </Text>\n              \n              {/* This would typically display a list of existing reminders */}\n              <View style={styles.emptyReminders}>\n                <Text variant=\"bodyLarge\" style={{ textAlign: 'center' }}>\n                  You don't have any prayer reminders yet\n                </Text>\n                <Button\n                  mode=\"contained\"\n                  onPress={() => {/* Navigate to create reminder */}}\n                  style={styles.addReminderButton}\n                >\n                  Create Reminder\n                </Button>\n              </View>\n            </Card.Content>\n          </Card>\n        )}\n        \n        {/* Account Tab */}\n        {activeTab === 'account' && (\n          <View>\n            <Card style={styles.card}>\n              <Card.Content>\n                <Text variant=\"titleMedium\" style={styles.sectionTitle}>\n                  Organizations\n                </Text>\n                \n                <List.Item\n                  title=\"Manage Organizations\"\n                  description=\"Create, join, or leave organizations\"\n                  left={props => <List.Icon {...props} icon=\"office-building\" />}\n                  onPress={navigateToOrganizations}\n                />\n                <Divider />\n                \n                <Text variant=\"titleMedium\" style={[styles.sectionTitle, { marginTop: 20 }]}>\n                  Account Security\n                </Text>\n                \n                <List.Item\n                  title=\"Change Password\"\n                  description=\"Update your account password\"\n                  left={props => <List.Icon {...props} icon=\"lock\" />}\n                  onPress={() => {/* Navigate to change password */}}\n                />\n                <Divider />\n                \n                <List.Item\n                  title=\"Delete Account\"\n                  description=\"Permanently delete your account and data\"\n                  left={props => <List.Icon {...props} icon=\"delete\" color=\"red\" />}\n                  onPress={() => {/* Show delete account confirmation */}}\n                />\n              </Card.Content>\n            </Card>\n            \n            <Button\n              mode=\"outlined\"\n              onPress={handleLogout}\n              style={styles.logoutButton}\n              icon=\"logout\"\n            >\n              Log Out\n            </Button>\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  tabs: {\n    margin: 16,\n  },\n  content: {\n    flex: 1,\n  },\n  profileHeader: {\n    alignItems: 'center',\n    padding: 20,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    borderRadius: 8,\n  },\n  avatar: {\n    marginBottom: 16,\n  },\n  profileName: {\n    marginBottom: 4,\n  },\n  profileUsername: {\n    opacity: 0.6,\n  },\n  profileForm: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  errorText: {\n    color: 'red',\n    marginTop: -12,\n    marginBottom: 16,\n    fontSize: 12,\n  },\n  submitButton: {\n    marginTop: 8,\n  },\n  card: {\n    margin: 16,\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  reminderDescription: {\n    marginBottom: 24,\n  },\n  emptyReminders: {\n    alignItems: 'center',\n    paddingVertical: 20,\n  },\n  addReminderButton: {\n    marginTop: 16,\n  },\n  logoutButton: {\n    margin: 16,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}