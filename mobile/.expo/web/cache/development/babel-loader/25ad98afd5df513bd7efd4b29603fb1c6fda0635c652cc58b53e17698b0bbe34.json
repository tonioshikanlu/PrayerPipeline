{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/navigation/NavigationContext.tsx\",\n  _this = this;\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NavigationContext = createContext({\n  currentScreen: 'Login',\n  navigate: function navigate() {},\n  goBack: function goBack() {},\n  navigationHistory: [],\n  params: {}\n});\nexport var NavigationProvider = function NavigationProvider(_ref) {\n  var _ref$initialScreen = _ref.initialScreen,\n    initialScreen = _ref$initialScreen === void 0 ? 'Login' : _ref$initialScreen,\n    children = _ref.children;\n  var _useState = useState(initialScreen),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState([initialScreen]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    navigationHistory = _useState4[0],\n    setNavigationHistory = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    params = _useState6[0],\n    setParams = _useState6[1];\n  var navigate = useCallback(function (screen, newParams) {\n    setCurrentScreen(screen);\n    setNavigationHistory(function (prev) {\n      return [].concat(_toConsumableArray(prev), [screen]);\n    });\n    if (newParams) {\n      setParams(newParams);\n    } else {\n      setParams({});\n    }\n  }, []);\n  var goBack = useCallback(function () {\n    if (navigationHistory.length > 1) {\n      var newHistory = _toConsumableArray(navigationHistory);\n      newHistory.pop();\n      var previousScreen = newHistory[newHistory.length - 1];\n      setCurrentScreen(previousScreen);\n      setNavigationHistory(newHistory);\n      setParams({});\n    }\n  }, [navigationHistory]);\n  return _jsxDEV(NavigationContext.Provider, {\n    value: {\n      currentScreen: currentScreen,\n      navigate: navigate,\n      goBack: goBack,\n      navigationHistory: navigationHistory,\n      params: params\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\nexport var useNavigation = function useNavigation() {\n  return useContext(NavigationContext);\n};\nexport default NavigationContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","NavigationContext","currentScreen","navigate","goBack","navigationHistory","params","NavigationProvider","_ref","_ref$initialScreen","initialScreen","children","_useState","_useState2","_slicedToArray","setCurrentScreen","_useState3","_useState4","setNavigationHistory","_useState5","_useState6","setParams","screen","newParams","prev","concat","_toConsumableArray","length","newHistory","pop","previousScreen","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useNavigation"],"sources":["/home/runner/workspace/mobile/src/navigation/NavigationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\ninterface NavigationContextType {\n  currentScreen: string;\n  navigate: (screen: string, params?: Record<string, any>) => void;\n  goBack: () => void;\n  navigationHistory: string[];\n  params: Record<string, any>;\n}\n\nconst NavigationContext = createContext<NavigationContextType>({\n  currentScreen: 'Login',\n  navigate: () => {},\n  goBack: () => {},\n  navigationHistory: [],\n  params: {},\n});\n\ninterface NavigationProviderProps {\n  initialScreen?: string;\n  children: React.ReactNode;\n}\n\nexport const NavigationProvider: React.FC<NavigationProviderProps> = ({ \n  initialScreen = 'Login', \n  children \n}) => {\n  const [currentScreen, setCurrentScreen] = useState(initialScreen);\n  const [navigationHistory, setNavigationHistory] = useState<string[]>([initialScreen]);\n  const [params, setParams] = useState<Record<string, any>>({});\n  \n  const navigate = useCallback((screen: string, newParams?: Record<string, any>) => {\n    setCurrentScreen(screen);\n    setNavigationHistory(prev => [...prev, screen]);\n    if (newParams) {\n      setParams(newParams);\n    } else {\n      setParams({});\n    }\n  }, []);\n  \n  const goBack = useCallback(() => {\n    if (navigationHistory.length > 1) {\n      const newHistory = [...navigationHistory];\n      newHistory.pop(); // Remove current screen\n      const previousScreen = newHistory[newHistory.length - 1];\n      setCurrentScreen(previousScreen);\n      setNavigationHistory(newHistory);\n      setParams({}); // Clear params when going back\n    }\n  }, [navigationHistory]);\n\n  return (\n    <NavigationContext.Provider value={{ \n      currentScreen, \n      navigate, \n      goBack, \n      navigationHistory,\n      params\n    }}>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport const useNavigation = () => useContext(NavigationContext);\n\nexport default NavigationContext;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhF,IAAMC,iBAAiB,GAAGN,aAAa,CAAwB;EAC7DO,aAAa,EAAE,OAAO;EACtBC,QAAQ,EAAE,SAAVA,QAAQA,CAAA,EAAQ,CAAC,CAAC;EAClBC,MAAM,EAAE,SAARA,MAAMA,CAAA,EAAQ,CAAC,CAAC;EAChBC,iBAAiB,EAAE,EAAE;EACrBC,MAAM,EAAE,CAAC;AACX,CAAC,CAAC;AAOF,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAqDA,CAAAC,IAAA,EAG5D;EAAA,IAAAC,kBAAA,GAAAD,IAAA,CAFJE,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,OAAO,GAAAA,kBAAA;IACvBE,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAER,IAAAC,SAAA,GAA0Cf,QAAQ,CAACa,aAAa,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DV,aAAa,GAAAW,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAkDnB,QAAQ,CAAW,CAACa,aAAa,CAAC,CAAC;IAAAO,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAA9EX,iBAAiB,GAAAY,UAAA;IAAEC,oBAAoB,GAAAD,UAAA;EAC9C,IAAAE,UAAA,GAA4BtB,QAAQ,CAAsB,CAAC,CAAC,CAAC;IAAAuB,UAAA,GAAAN,cAAA,CAAAK,UAAA;IAAtDb,MAAM,GAAAc,UAAA;IAAEC,SAAS,GAAAD,UAAA;EAExB,IAAMjB,QAAQ,GAAGL,WAAW,CAAC,UAACwB,MAAc,EAAEC,SAA+B,EAAK;IAChFR,gBAAgB,CAACO,MAAM,CAAC;IACxBJ,oBAAoB,CAAC,UAAAM,IAAI;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAQF,IAAI,IAAEF,MAAM;IAAA,CAAC,CAAC;IAC/C,IAAIC,SAAS,EAAE;MACbF,SAAS,CAACE,SAAS,CAAC;IACtB,CAAC,MAAM;MACLF,SAAS,CAAC,CAAC,CAAC,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMjB,MAAM,GAAGN,WAAW,CAAC,YAAM;IAC/B,IAAIO,iBAAiB,CAACsB,MAAM,GAAG,CAAC,EAAE;MAChC,IAAMC,UAAU,GAAAF,kBAAA,CAAOrB,iBAAiB,CAAC;MACzCuB,UAAU,CAACC,GAAG,CAAC,CAAC;MAChB,IAAMC,cAAc,GAAGF,UAAU,CAACA,UAAU,CAACD,MAAM,GAAG,CAAC,CAAC;MACxDZ,gBAAgB,CAACe,cAAc,CAAC;MAChCZ,oBAAoB,CAACU,UAAU,CAAC;MAChCP,SAAS,CAAC,CAAC,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAAChB,iBAAiB,CAAC,CAAC;EAEvB,OACEL,OAAA,CAACC,iBAAiB,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MACjC9B,aAAa,EAAbA,aAAa;MACbC,QAAQ,EAARA,QAAQ;MACRC,MAAM,EAANA,MAAM;MACNC,iBAAiB,EAAjBA,iBAAiB;MACjBC,MAAM,EAANA;IACF,CAAE;IAAAK,QAAA,EACCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACiB,CAAC;AAEjC,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA;EAAA,OAAS1C,UAAU,CAACK,iBAAiB,CAAC;AAAA;AAEhE,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}