{"ast":null,"code":"import { z } from 'zod';\nexport var UserSchema = z.object({\n  id: z.number(),\n  username: z.string(),\n  name: z.string(),\n  email: z.string().email(),\n  role: z.string().default('regular'),\n  phone: z.string().optional(),\n  avatar: z.string().optional(),\n  bio: z.string().optional()\n});\nexport var InsertUserSchema = UserSchema.omit({\n  id: true\n}).extend({\n  password: z.string().min(6, \"Password must be at least 6 characters\")\n});\nexport var LoginSchema = z.object({\n  username: z.string().min(1, \"Username is required\"),\n  password: z.string().min(1, \"Password is required\")\n});\nexport var RegisterSchema = InsertUserSchema.extend({\n  confirmPassword: z.string().min(1, \"Please confirm your password\")\n}).refine(function (data) {\n  return data.password === data.confirmPassword;\n}, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"]\n});\nexport var ForgotPasswordSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\")\n});\nexport var ResetPasswordSchema = z.object({\n  token: z.string().min(1, \"Token is required\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string().min(1, \"Please confirm your password\")\n}).refine(function (data) {\n  return data.password === data.confirmPassword;\n}, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"]\n});\nexport var OrganizationSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string().or(z.date()),\n  createdBy: z.number()\n});\nexport var PrayerRequestSchema = z.object({\n  id: z.number(),\n  groupId: z.number(),\n  userId: z.number(),\n  title: z.string(),\n  description: z.string(),\n  urgency: z.string(),\n  isAnonymous: z.boolean(),\n  status: z.string(),\n  followUpDate: z.string().or(z.date()).optional(),\n  isStale: z.boolean(),\n  createdAt: z.string().or(z.date()),\n  updatedAt: z.string().or(z.date())\n});\nexport var GroupSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n  description: z.string().optional(),\n  organizationId: z.number(),\n  category: z.string(),\n  privacy: z.string(),\n  leaderRotation: z.number(),\n  createdAt: z.string().or(z.date()),\n  createdBy: z.number()\n});\nexport var CommentSchema = z.object({\n  id: z.number(),\n  prayerRequestId: z.number(),\n  userId: z.number(),\n  text: z.string(),\n  isPrivate: z.boolean(),\n  createdAt: z.string().or(z.date())\n});","map":{"version":3,"names":["z","UserSchema","object","id","number","username","string","name","email","role","default","phone","optional","avatar","bio","InsertUserSchema","omit","extend","password","min","LoginSchema","RegisterSchema","confirmPassword","refine","data","message","path","ForgotPasswordSchema","ResetPasswordSchema","token","OrganizationSchema","description","createdAt","or","date","createdBy","PrayerRequestSchema","groupId","userId","title","urgency","isAnonymous","boolean","status","followUpDate","isStale","updatedAt","GroupSchema","organizationId","category","privacy","leaderRotation","CommentSchema","prayerRequestId","text","isPrivate"],"sources":["/home/runner/workspace/mobile/src/shared/schema.ts"],"sourcesContent":["import { z } from 'zod';\n\n// Define the User schema\nexport const UserSchema = z.object({\n  id: z.number(),\n  username: z.string(),\n  name: z.string(),\n  email: z.string().email(),\n  role: z.string().default('regular'),\n  phone: z.string().optional(),\n  avatar: z.string().optional(),\n  bio: z.string().optional(),\n});\n\n// Define the insert user schema\nexport const InsertUserSchema = UserSchema.omit({ id: true }).extend({\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\n// Login schema\nexport const LoginSchema = z.object({\n  username: z.string().min(1, \"Username is required\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\n// Register schema\nexport const RegisterSchema = InsertUserSchema.extend({\n  confirmPassword: z.string().min(1, \"Please confirm your password\"),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"],\n});\n\n// ForgotPassword schema\nexport const ForgotPasswordSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n});\n\n// ResetPassword schema\nexport const ResetPasswordSchema = z.object({\n  token: z.string().min(1, \"Token is required\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string().min(1, \"Please confirm your password\"),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"],\n});\n\n// Export types\nexport type User = z.infer<typeof UserSchema>;\nexport type InsertUser = z.infer<typeof InsertUserSchema>;\nexport type LoginData = z.infer<typeof LoginSchema>;\nexport type RegisterData = z.infer<typeof RegisterSchema>;\nexport type ForgotPasswordData = z.infer<typeof ForgotPasswordSchema>;\nexport type ResetPasswordData = z.infer<typeof ResetPasswordSchema>;\n\n// Organization schema\nexport const OrganizationSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string().or(z.date()),\n  createdBy: z.number(),\n});\n\nexport type Organization = z.infer<typeof OrganizationSchema>;\n\n// PrayerRequest schema\nexport const PrayerRequestSchema = z.object({\n  id: z.number(),\n  groupId: z.number(),\n  userId: z.number(),\n  title: z.string(),\n  description: z.string(),\n  urgency: z.string(),\n  isAnonymous: z.boolean(),\n  status: z.string(),\n  followUpDate: z.string().or(z.date()).optional(),\n  isStale: z.boolean(),\n  createdAt: z.string().or(z.date()),\n  updatedAt: z.string().or(z.date()),\n});\n\nexport type PrayerRequest = z.infer<typeof PrayerRequestSchema>;\n\n// Group schema\nexport const GroupSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n  description: z.string().optional(),\n  organizationId: z.number(),\n  category: z.string(),\n  privacy: z.string(),\n  leaderRotation: z.number(),\n  createdAt: z.string().or(z.date()),\n  createdBy: z.number(),\n});\n\nexport type Group = z.infer<typeof GroupSchema>;\n\n// Comment schema\nexport const CommentSchema = z.object({\n  id: z.number(),\n  prayerRequestId: z.number(),\n  userId: z.number(),\n  text: z.string(),\n  isPrivate: z.boolean(),\n  createdAt: z.string().or(z.date()),\n});\n\nexport type Comment = z.infer<typeof CommentSchema>;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}