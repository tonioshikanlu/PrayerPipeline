{"ast":null,"code":"var _jsxFileName = \"/home/runner/workspace/mobile/src/navigation/TabBar.tsx\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"./NavigationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TabBar = function TabBar(_ref) {\n  var _ref$activeColor = _ref.activeColor,\n    activeColor = _ref$activeColor === void 0 ? '#6366F1' : _ref$activeColor,\n    _ref$inactiveColor = _ref.inactiveColor,\n    inactiveColor = _ref$inactiveColor === void 0 ? '#9CA3AF' : _ref$inactiveColor,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? '#FFFFFF' : _ref$backgroundColor;\n  var _useNavigation = useNavigation(),\n    currentScreen = _useNavigation.currentScreen,\n    navigate = _useNavigation.navigate;\n  var tabs = [{\n    name: 'Home',\n    label: 'Home',\n    icon: 'üè†'\n  }, {\n    name: 'ExploreGroups',\n    label: 'Groups',\n    icon: 'üë•'\n  }, {\n    name: 'PrayerRequests',\n    label: 'Prayers',\n    icon: 'üôè'\n  }, {\n    name: 'Organizations',\n    label: 'Orgs',\n    icon: 'üè¢'\n  }, {\n    name: 'Settings',\n    label: 'Settings',\n    icon: '‚öôÔ∏è'\n  }];\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }],\n    children: tabs.map(function (tab) {\n      var isActive = currentScreen === tab.name;\n      return _jsxDEV(TouchableOpacity, {\n        style: styles.tabButton,\n        onPress: function onPress() {\n          return navigate(tab.name);\n        },\n        children: [_jsxDEV(Text, {\n          style: styles.tabIcon,\n          children: tab.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this), _jsxDEV(Text, {\n          style: [styles.tabLabel, {\n            color: isActive ? activeColor : inactiveColor\n          }],\n          children: tab.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this)]\n      }, tab.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 60,\n    borderTopWidth: 1,\n    borderTopColor: '#E5E7EB'\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 8\n  },\n  tabIcon: {\n    fontSize: 20,\n    marginBottom: 2\n  },\n  tabLabel: {\n    fontSize: 12,\n    fontWeight: '500'\n  }\n});\nexport default TabBar;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleSheet","useNavigation","jsxDEV","_jsxDEV","TabBar","_ref","_ref$activeColor","activeColor","_ref$inactiveColor","inactiveColor","_ref$backgroundColor","backgroundColor","_useNavigation","currentScreen","navigate","tabs","name","label","icon","style","styles","container","children","map","tab","isActive","tabButton","onPress","tabIcon","fileName","_jsxFileName","lineNumber","columnNumber","_this","tabLabel","color","create","flexDirection","height","borderTopWidth","borderTopColor","flex","justifyContent","alignItems","paddingVertical","fontSize","marginBottom","fontWeight"],"sources":["/home/runner/workspace/mobile/src/navigation/TabBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { useNavigation } from './NavigationContext';\n\ninterface TabBarProps {\n  activeColor?: string;\n  inactiveColor?: string;\n  backgroundColor?: string;\n}\n\nconst TabBar: React.FC<TabBarProps> = ({ \n  activeColor = '#6366F1', \n  inactiveColor = '#9CA3AF',\n  backgroundColor = '#FFFFFF'\n}) => {\n  const { currentScreen, navigate } = useNavigation();\n\n  const tabs = [\n    { name: 'Home', label: 'Home', icon: 'üè†' },\n    { name: 'ExploreGroups', label: 'Groups', icon: 'üë•' },\n    { name: 'PrayerRequests', label: 'Prayers', icon: 'üôè' },\n    { name: 'Organizations', label: 'Orgs', icon: 'üè¢' },\n    { name: 'Settings', label: 'Settings', icon: '‚öôÔ∏è' },\n  ];\n\n  return (\n    <View style={[styles.container, { backgroundColor }]}>\n      {tabs.map((tab) => {\n        const isActive = currentScreen === tab.name;\n        return (\n          <TouchableOpacity\n            key={tab.name}\n            style={styles.tabButton}\n            onPress={() => navigate(tab.name)}\n          >\n            <Text style={styles.tabIcon}>{tab.icon}</Text>\n            <Text\n              style={[\n                styles.tabLabel,\n                { color: isActive ? activeColor : inactiveColor }\n              ]}\n            >\n              {tab.label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 60,\n    borderTopWidth: 1,\n    borderTopColor: '#E5E7EB',\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  tabIcon: {\n    fontSize: 20,\n    marginBottom: 2,\n  },\n  tabLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n});\n\nexport default TabBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}