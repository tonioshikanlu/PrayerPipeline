{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { QueryClient } from '@tanstack/react-query';\nvar API_BASE_URL = '/api';\nexport var queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000\n    }\n  }\n});\nexport function apiRequest(_x, _x2, _x3) {\n  return _apiRequest.apply(this, arguments);\n}\nfunction _apiRequest() {\n  _apiRequest = _asyncToGenerator(function* (method, endpoint, body) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var url = `${API_BASE_URL}${endpoint}`;\n    var headers = _objectSpread({\n      'Content-Type': 'application/json'\n    }, options.headers);\n    var config = {\n      method: method,\n      headers: headers,\n      credentials: options.credentials || 'include'\n    };\n    if (body && method !== 'GET') {\n      config.body = JSON.stringify(body);\n    }\n    return fetch(url, config);\n  });\n  return _apiRequest.apply(this, arguments);\n}\nexport function getQueryFn() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var queryKey = _ref.queryKey;\n      var _queryKey = _slicedToArray(queryKey, 1),\n        endpoint = _queryKey[0];\n      var response = yield apiRequest('GET', endpoint, undefined, options);\n      if (!response.ok) {\n        if (response.status === 401 && options.on401 === 'returnNull') {\n          return null;\n        }\n        var errorData = yield response.json().catch(function () {\n          return {};\n        });\n        throw new Error(errorData.message || `Error ${response.status}: ${response.statusText}`);\n      }\n      if (response.status === 204) {\n        return null;\n      }\n      return response.json();\n    });\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"names":["QueryClient","API_BASE_URL","queryClient","defaultOptions","queries","refetchOnWindowFocus","retry","staleTime","apiRequest","_x","_x2","_x3","_apiRequest","apply","arguments","_asyncToGenerator","method","endpoint","body","options","length","undefined","url","headers","_objectSpread","config","credentials","JSON","stringify","fetch","getQueryFn","_ref2","_ref","queryKey","_queryKey","_slicedToArray","response","ok","status","on401","errorData","json","catch","Error","message","statusText","_x4"],"sources":["/home/runner/workspace/mobile/src/api/queryClient.ts"],"sourcesContent":["import { QueryClient } from '@tanstack/react-query';\n\n// Base URL for API requests - adjust for dev/prod environments\nconst API_BASE_URL = '/api';\n\n// Create and export the query client instance\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\n// Types for the API request options\ntype Method = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\ntype ApiOptions = {\n  headers?: Record<string, string>;\n  credentials?: RequestCredentials;\n  on401?: 'throw' | 'returnNull';\n};\n\n/**\n * Helper function to make API requests\n */\nexport async function apiRequest(\n  method: Method,\n  endpoint: string,\n  body?: any,\n  options: ApiOptions = {}\n): Promise<Response> {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n\n  const config: RequestInit = {\n    method,\n    headers,\n    credentials: options.credentials || 'include',\n  };\n\n  if (body && method !== 'GET') {\n    config.body = JSON.stringify(body);\n  }\n\n  return fetch(url, config);\n}\n\n/**\n * Creates a query function for react-query that handles common API response scenarios\n */\nexport function getQueryFn(options: ApiOptions = {}) {\n  return async ({ queryKey }: any) => {\n    const [endpoint] = queryKey;\n    const response = await apiRequest('GET', endpoint, undefined, options);\n\n    if (!response.ok) {\n      if (response.status === 401 && options.on401 === 'returnNull') {\n        return null;\n      }\n      \n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Error ${response.status}: ${response.statusText}`);\n    }\n\n    // For endpoints that don't return JSON (like 204 No Content)\n    if (response.status === 204) {\n      return null;\n    }\n\n    return response.json();\n  };\n}"],"mappings":";;;;;AAAA,SAASA,WAAW,QAAQ,uBAAuB;AAGnD,IAAMC,YAAY,GAAG,MAAM;AAG3B,OAAO,IAAMC,WAAW,GAAG,IAAIF,WAAW,CAAC;EACzCG,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,oBAAoB,EAAE,KAAK;MAC3BC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG;IACtB;EACF;AACF,CAAC,CAAC;AAaF,gBAAsBC,UAAUA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAuB/B,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAvBM,WACLC,MAAc,EACdC,QAAgB,EAChBC,IAAU,EAES;IAAA,IADnBC,OAAmB,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAG,CAAC,CAAC;IAExB,IAAMQ,GAAG,GAAG,GAAGrB,YAAY,GAAGgB,QAAQ,EAAE;IACxC,IAAMM,OAAO,GAAAC,aAAA;MACX,cAAc,EAAE;IAAkB,GAC/BL,OAAO,CAACI,OAAO,CACnB;IAED,IAAME,MAAmB,GAAG;MAC1BT,MAAM,EAANA,MAAM;MACNO,OAAO,EAAPA,OAAO;MACPG,WAAW,EAAEP,OAAO,CAACO,WAAW,IAAI;IACtC,CAAC;IAED,IAAIR,IAAI,IAAIF,MAAM,KAAK,KAAK,EAAE;MAC5BS,MAAM,CAACP,IAAI,GAAGS,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;IACpC;IAEA,OAAOW,KAAK,CAACP,GAAG,EAAEG,MAAM,CAAC;EAC3B,CAAC;EAAA,OAAAb,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAKD,OAAO,SAASgB,UAAUA,CAAA,EAA2B;EAAA,IAA1BX,OAAmB,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAG,CAAC,CAAC;EACjD;IAAA,IAAAiB,KAAA,GAAAhB,iBAAA,CAAO,WAAAiB,IAAA,EAA6B;MAAA,IAApBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MACtB,IAAAC,SAAA,GAAAC,cAAA,CAAmBF,QAAQ;QAApBhB,QAAQ,GAAAiB,SAAA;MACf,IAAME,QAAQ,SAAS5B,UAAU,CAAC,KAAK,EAAES,QAAQ,EAAEI,SAAS,EAAEF,OAAO,CAAC;MAEtE,IAAI,CAACiB,QAAQ,CAACC,EAAE,EAAE;QAChB,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAInB,OAAO,CAACoB,KAAK,KAAK,YAAY,EAAE;UAC7D,OAAO,IAAI;QACb;QAEA,IAAMC,SAAS,SAASJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC;UAAA,OAAO,CAAC,CAAC;QAAA,CAAC,CAAC;QACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,SAASR,QAAQ,CAACE,MAAM,KAAKF,QAAQ,CAACS,UAAU,EAAE,CAAC;MAC1F;MAGA,IAAIT,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAO,IAAI;MACb;MAEA,OAAOF,QAAQ,CAACK,IAAI,CAAC,CAAC;IACxB,CAAC;IAAA,iBAAAK,GAAA;MAAA,OAAAf,KAAA,CAAAlB,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}