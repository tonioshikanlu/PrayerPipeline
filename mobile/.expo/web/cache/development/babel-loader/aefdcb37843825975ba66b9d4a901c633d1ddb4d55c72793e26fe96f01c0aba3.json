{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/context/AuthContext.tsx\",\n  _this = this;\nimport React, { createContext, useState, useEffect } from 'react';\nimport * as SecureStore from \"../mocks/expo-secure-store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    var loadUser = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var userJSON = yield SecureStore.getItemAsync('user');\n          if (userJSON) {\n            setUser(JSON.parse(userJSON));\n          }\n        } catch (error) {\n          console.error('Failed to load user from storage:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function loadUser() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadUser();\n  }, []);\n  var signIn = function () {\n    var _ref3 = _asyncToGenerator(function* (username, password) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Authentication failed');\n        }\n        var userData = yield response.json();\n        yield SecureStore.setItemAsync('user', JSON.stringify(userData));\n        setUser(userData);\n        return true;\n      } catch (error) {\n        console.error('Sign in error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function signIn(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var signUp = function () {\n    var _ref4 = _asyncToGenerator(function* (username, email, password) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Registration failed');\n        }\n        var userData = yield response.json();\n        yield SecureStore.setItemAsync('user', JSON.stringify(userData));\n        setUser(userData);\n        return true;\n      } catch (error) {\n        console.error('Sign up error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function signUp(_x3, _x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var signOut = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setIsLoading(true);\n        yield fetch('/api/logout', {\n          method: 'POST'\n        });\n        yield SecureStore.deleteItemAsync('user');\n        setUser(null);\n      } catch (error) {\n        console.error('Sign out error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function signOut() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var forgotPassword = function () {\n    var _ref6 = _asyncToGenerator(function* (email) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/forgot-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email\n          })\n        });\n        return response.ok;\n      } catch (error) {\n        console.error('Forgot password error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function forgotPassword(_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var resetPassword = function () {\n    var _ref7 = _asyncToGenerator(function* (token, newPassword) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/reset-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token: token,\n            password: newPassword\n          })\n        });\n        return response.ok;\n      } catch (error) {\n        console.error('Reset password error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function resetPassword(_x7, _x8) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref8 = _asyncToGenerator(function* (data) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/user/profile', {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update profile');\n        }\n        var updatedUser = yield response.json();\n        yield SecureStore.setItemAsync('user', JSON.stringify(updatedUser));\n        setUser(updatedUser);\n        return true;\n      } catch (error) {\n        console.error('Update profile error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function updateProfile(_x9) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var changePassword = function () {\n    var _ref9 = _asyncToGenerator(function* (currentPassword, newPassword) {\n      try {\n        setIsLoading(true);\n        var response = yield fetch('/api/user/change-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            currentPassword: currentPassword,\n            newPassword: newPassword\n          })\n        });\n        return response.ok;\n      } catch (error) {\n        console.error('Change password error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function changePassword(_x10, _x11) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var value = {\n    user: user,\n    isLoading: isLoading,\n    signIn: signIn,\n    signUp: signUp,\n    signOut: signOut,\n    forgotPassword: forgotPassword,\n    resetPassword: resetPassword,\n    updateProfile: updateProfile,\n    changePassword: changePassword\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 10\n  }, _this);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","SecureStore","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isLoading","setIsLoading","loadUser","_ref2","_asyncToGenerator","userJSON","getItemAsync","JSON","parse","error","console","apply","arguments","signIn","_ref3","username","password","response","fetch","method","headers","body","stringify","ok","Error","userData","json","setItemAsync","_x","_x2","signUp","_ref4","email","_x3","_x4","_x5","signOut","_ref5","deleteItemAsync","forgotPassword","_ref6","_x6","resetPassword","_ref7","token","newPassword","_x7","_x8","updateProfile","_ref8","data","updatedUser","_x9","changePassword","_ref9","currentPassword","_x10","_x11","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["/home/runner/workspace/mobile/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport * as SecureStore from '../mocks/expo-secure-store';\nimport { User } from '../../../shared/schema';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  signIn: (username: string, password: string) => Promise<boolean>;\n  signUp: (username: string, email: string, password: string) => Promise<boolean>;\n  signOut: () => Promise<void>;\n  forgotPassword: (email: string) => Promise<boolean>;\n  resetPassword: (token: string, newPassword: string) => Promise<boolean>;\n  updateProfile: (data: Partial<User>) => Promise<boolean>;\n  changePassword: (currentPassword: string, newPassword: string) => Promise<boolean>;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Load user from secure storage\n    const loadUser = async () => {\n      try {\n        const userJSON = await SecureStore.getItemAsync('user');\n        if (userJSON) {\n          setUser(JSON.parse(userJSON));\n        }\n      } catch (error) {\n        console.error('Failed to load user from storage:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  const signIn = async (username: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to authenticate user\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Authentication failed');\n      }\n\n      const userData = await response.json();\n      \n      // Save user to secure storage\n      await SecureStore.setItemAsync('user', JSON.stringify(userData));\n      setUser(userData);\n      return true;\n    } catch (error) {\n      console.error('Sign in error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signUp = async (username: string, email: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to register user\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n\n      const userData = await response.json();\n      \n      // Save user to secure storage\n      await SecureStore.setItemAsync('user', JSON.stringify(userData));\n      setUser(userData);\n      return true;\n    } catch (error) {\n      console.error('Sign up error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signOut = async (): Promise<void> => {\n    try {\n      setIsLoading(true);\n      // Call API to logout\n      await fetch('/api/logout', {\n        method: 'POST',\n      });\n      \n      // Remove user from secure storage\n      await SecureStore.deleteItemAsync('user');\n      setUser(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const forgotPassword = async (email: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to request password reset\n      const response = await fetch('/api/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      return response.ok;\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetPassword = async (token: string, newPassword: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to reset password\n      const response = await fetch('/api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token, password: newPassword }),\n      });\n\n      return response.ok;\n    } catch (error) {\n      console.error('Reset password error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateProfile = async (data: Partial<User>): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to update user profile\n      const response = await fetch('/api/user/profile', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update profile');\n      }\n\n      const updatedUser = await response.json();\n      \n      // Update user in secure storage\n      await SecureStore.setItemAsync('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      return true;\n    } catch (error) {\n      console.error('Update profile error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const changePassword = async (currentPassword: string, newPassword: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      // Call API to change password\n      const response = await fetch('/api/user/change-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ currentPassword, newPassword }),\n      });\n\n      return response.ok;\n    } catch (error) {\n      console.error('Change password error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    isLoading,\n    signIn,\n    signUp,\n    signOut,\n    forgotPassword,\n    resetPassword,\n    updateProfile,\n    changePassword,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}