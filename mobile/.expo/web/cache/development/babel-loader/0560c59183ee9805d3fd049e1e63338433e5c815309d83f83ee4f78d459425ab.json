{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/TestApiConnection.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { buildApiUrl } from \"./api/queryClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TestApiConnection = function TestApiConnection() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    results = _useState2[0],\n    setResults = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var endpoints = ['/api/test-connection', '/api/user', '/api/organizations', '/api/groups/user'];\n  var clearResults = function clearResults() {\n    return setResults([]);\n  };\n  var testEndpoint = function () {\n    var _ref = _asyncToGenerator(function* (endpoint) {\n      var url = buildApiUrl(endpoint);\n      console.log(`Testing connection to: ${url}`);\n      try {\n        console.log(`Testing ${endpoint} with credentials: include`);\n        var res = yield fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          credentials: 'include'\n        });\n        var contentType = res.headers.get('content-type');\n        console.log(`Response status: ${res.status}, content-type: ${contentType}`);\n        var responseData = null;\n        if (contentType && contentType.includes('application/json')) {\n          try {\n            responseData = yield res.json();\n            console.log(`Response data: ${JSON.stringify(responseData).substring(0, 100)}`);\n          } catch (err) {\n            responseData = 'Failed to parse JSON response';\n            console.error('Failed to parse JSON response:', err);\n          }\n        } else {\n          try {\n            responseData = yield res.text();\n            console.log(`Response text: ${responseData.substring(0, 100)}`);\n          } catch (err) {\n            responseData = 'Failed to read response text';\n            console.error('Failed to read response text:', err);\n          }\n        }\n        return {\n          endpoint: endpoint,\n          status: res.status,\n          statusText: res.statusText,\n          contentType: contentType,\n          responseData: responseData\n        };\n      } catch (error) {\n        console.error(`Error testing ${endpoint} with credentials:`, error);\n        try {\n          console.log(`Testing ${endpoint} without credentials`);\n          var _res = yield fetch(url, {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json'\n            }\n          });\n          var _contentType = _res.headers.get('content-type');\n          console.log(`Response status: ${_res.status}, content-type: ${_contentType}`);\n          var _responseData = null;\n          if (_contentType && _contentType.includes('application/json')) {\n            _responseData = yield _res.json();\n          } else {\n            _responseData = yield _res.text();\n          }\n          return {\n            endpoint: endpoint,\n            status: _res.status,\n            statusText: _res.statusText,\n            contentType: _contentType,\n            responseData: _responseData,\n            notes: \"Connection succeeded without credentials\"\n          };\n        } catch (secondError) {\n          console.error(`Error testing ${endpoint} without credentials:`, secondError);\n          return {\n            endpoint: endpoint,\n            status: 0,\n            statusText: 'Connection Failed',\n            contentType: null,\n            error: `Failed with both credentials approaches. Error: ${error instanceof Error ? error.message : String(error)}`\n          };\n        }\n      }\n    });\n    return function testEndpoint(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var runAllTests = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setResults([]);\n      var newResults = [];\n      for (var endpoint of endpoints) {\n        var result = yield testEndpoint(endpoint);\n        newResults.push(result);\n        setResults([].concat(newResults));\n      }\n      setLoading(false);\n    });\n    return function runAllTests() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"API Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.baseUrl,\n      children: [\"Base URL: \", buildApiUrl('')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: [_jsxDEV(Button, {\n        title: \"Run All Tests\",\n        onPress: runAllTests,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, _this), _jsxDEV(Button, {\n        title: \"Clear Results\",\n        onPress: clearResults,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, _this), loading && _jsxDEV(Text, {\n      style: styles.loading,\n      children: \"Testing API connections...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }, _this), _jsxDEV(ScrollView, {\n      style: styles.resultsContainer,\n      children: results.map(function (result, index) {\n        return _jsxDEV(View, {\n          style: styles.resultItem,\n          children: [_jsxDEV(Text, {\n            style: styles.endpoint,\n            children: result.endpoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: [styles.status, result.status >= 200 && result.status < 300 ? styles.success : styles.error],\n            children: [\"Status: \", result.status, \" \", result.statusText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, _this), result.contentType && _jsxDEV(Text, {\n            style: styles.contentType,\n            children: [\"Content-Type: \", result.contentType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, _this), result.error && _jsxDEV(View, {\n            style: styles.errorContainer,\n            children: _jsxDEV(Text, {\n              style: styles.errorText,\n              children: result.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, _this), result.responseData && _jsxDEV(View, {\n            style: styles.responseContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.responseTitle,\n              children: \"Response:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, _this), _jsxDEV(Text, {\n              style: styles.responseData,\n              children: typeof result.responseData === 'object' ? JSON.stringify(result.responseData, null, 2) : result.responseData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  baseUrl: {\n    fontSize: 14,\n    marginBottom: 16,\n    color: '#555'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16\n  },\n  loading: {\n    textAlign: 'center',\n    marginVertical: 10,\n    fontStyle: 'italic'\n  },\n  resultsContainer: {\n    flex: 1\n  },\n  resultItem: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  endpoint: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  status: {\n    fontSize: 14,\n    marginBottom: 4\n  },\n  success: {\n    color: 'green'\n  },\n  error: {\n    color: 'red'\n  },\n  contentType: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 8\n  },\n  errorContainer: {\n    backgroundColor: '#ffeeee',\n    padding: 8,\n    borderRadius: 4,\n    marginTop: 8\n  },\n  errorText: {\n    color: 'red'\n  },\n  responseContainer: {\n    marginTop: 8\n  },\n  responseTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  responseData: {\n    fontSize: 12,\n    fontFamily: 'monospace',\n    backgroundColor: '#f0f0f0',\n    padding: 8,\n    borderRadius: 4\n  }\n});\nexport default TestApiConnection;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","ScrollView","buildApiUrl","jsxDEV","_jsxDEV","TestApiConnection","_useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","loading","setLoading","endpoints","clearResults","testEndpoint","_ref","_asyncToGenerator","endpoint","url","console","log","res","fetch","method","headers","credentials","contentType","get","status","responseData","includes","json","JSON","stringify","substring","err","error","text","statusText","notes","secondError","Error","message","String","_x","apply","arguments","runAllTests","_ref2","newResults","result","push","concat","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","baseUrl","buttonContainer","onPress","disabled","resultsContainer","map","index","resultItem","success","errorContainer","errorText","responseContainer","responseTitle","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","flexDirection","justifyContent","textAlign","marginVertical","fontStyle","borderRadius","borderWidth","borderColor","marginTop","fontFamily"],"sources":["/home/runner/workspace/mobile/src/TestApiConnection.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet, ScrollView } from 'react-native';\nimport { buildApiUrl } from './api/queryClient';\n\ntype ApiTestResult = {\n  endpoint: string;\n  status: number;\n  statusText: string;\n  contentType: string | null;\n  responseData?: any;\n  error?: string;\n};\n\nconst TestApiConnection = () => {\n  const [results, setResults] = useState<ApiTestResult[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  // Test endpoints\n  const endpoints = [\n    '/api/test-connection', // Basic connectivity test (no auth)\n    '/api/user',            // Current user (auth check)\n    '/api/organizations',   // List organizations\n    '/api/groups/user',     // User's groups\n  ];\n\n  const clearResults = () => setResults([]);\n\n  const testEndpoint = async (endpoint: string) => {\n    const url = buildApiUrl(endpoint);\n    console.log(`Testing connection to: ${url}`);\n    \n    // First try with credentials included (for auth-based endpoints)\n    try {\n      console.log(`Testing ${endpoint} with credentials: include`);\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        },\n        credentials: 'include',\n      });\n      \n      const contentType = res.headers.get('content-type');\n      console.log(`Response status: ${res.status}, content-type: ${contentType}`);\n      \n      let responseData: any = null;\n      if (contentType && contentType.includes('application/json')) {\n        try {\n          responseData = await res.json();\n          console.log(`Response data: ${JSON.stringify(responseData).substring(0, 100)}`);\n        } catch (err) {\n          responseData = 'Failed to parse JSON response';\n          console.error('Failed to parse JSON response:', err);\n        }\n      } else {\n        try {\n          responseData = await res.text();\n          console.log(`Response text: ${responseData.substring(0, 100)}`);\n        } catch (err) {\n          responseData = 'Failed to read response text';\n          console.error('Failed to read response text:', err);\n        }\n      }\n      \n      return {\n        endpoint,\n        status: res.status,\n        statusText: res.statusText,\n        contentType,\n        responseData,\n      };\n    } catch (error) {\n      console.error(`Error testing ${endpoint} with credentials:`, error);\n      \n      // If that fails, try without credentials (for public endpoints)\n      try {\n        console.log(`Testing ${endpoint} without credentials`);\n        const res = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n          },\n          // No credentials\n        });\n        \n        const contentType = res.headers.get('content-type');\n        console.log(`Response status: ${res.status}, content-type: ${contentType}`);\n        \n        let responseData: any = null;\n        if (contentType && contentType.includes('application/json')) {\n          responseData = await res.json();\n        } else {\n          responseData = await res.text();\n        }\n        \n        return {\n          endpoint,\n          status: res.status,\n          statusText: res.statusText,\n          contentType,\n          responseData,\n          notes: \"Connection succeeded without credentials\",\n        };\n      } catch (secondError) {\n        console.error(`Error testing ${endpoint} without credentials:`, secondError);\n        return {\n          endpoint,\n          status: 0,\n          statusText: 'Connection Failed',\n          contentType: null,\n          error: `Failed with both credentials approaches. Error: ${error instanceof Error ? error.message : String(error)}`,\n        };\n      }\n    }\n  };\n\n  const runAllTests = async () => {\n    setLoading(true);\n    setResults([]);\n    \n    const newResults = [];\n    \n    for (const endpoint of endpoints) {\n      const result = await testEndpoint(endpoint);\n      newResults.push(result);\n      setResults([...newResults]); // Update results as they come in\n    }\n    \n    setLoading(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>API Connection Test</Text>\n      <Text style={styles.baseUrl}>Base URL: {buildApiUrl('')}</Text>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Run All Tests\" \n          onPress={runAllTests} \n          disabled={loading} \n        />\n        <Button \n          title=\"Clear Results\" \n          onPress={clearResults} \n          disabled={loading} \n        />\n      </View>\n      \n      {loading && <Text style={styles.loading}>Testing API connections...</Text>}\n      \n      <ScrollView style={styles.resultsContainer}>\n        {results.map((result, index) => (\n          <View key={index} style={styles.resultItem}>\n            <Text style={styles.endpoint}>{result.endpoint}</Text>\n            <Text style={[\n              styles.status, \n              result.status >= 200 && result.status < 300 ? styles.success : styles.error\n            ]}>\n              Status: {result.status} {result.statusText}\n            </Text>\n            {result.contentType && (\n              <Text style={styles.contentType}>Content-Type: {result.contentType}</Text>\n            )}\n            {result.error && (\n              <View style={styles.errorContainer}>\n                <Text style={styles.errorText}>{result.error}</Text>\n              </View>\n            )}\n            {result.responseData && (\n              <View style={styles.responseContainer}>\n                <Text style={styles.responseTitle}>Response:</Text>\n                <Text style={styles.responseData}>\n                  {typeof result.responseData === 'object' \n                    ? JSON.stringify(result.responseData, null, 2) \n                    : result.responseData}\n                </Text>\n              </View>\n            )}\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f5f5f5',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  baseUrl: {\n    fontSize: 14,\n    marginBottom: 16,\n    color: '#555',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  loading: {\n    textAlign: 'center',\n    marginVertical: 10,\n    fontStyle: 'italic',\n  },\n  resultsContainer: {\n    flex: 1,\n  },\n  resultItem: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  endpoint: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  status: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  success: {\n    color: 'green',\n  },\n  error: {\n    color: 'red',\n  },\n  contentType: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 8,\n  },\n  errorContainer: {\n    backgroundColor: '#ffeeee',\n    padding: 8,\n    borderRadius: 4,\n    marginTop: 8,\n  },\n  errorText: {\n    color: 'red',\n  },\n  responseContainer: {\n    marginTop: 8,\n  },\n  responseTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  responseData: {\n    fontSize: 12,\n    fontFamily: 'monospace',\n    backgroundColor: '#f0f0f0',\n    padding: 8,\n    borderRadius: 4,\n  },\n});\n\nexport default TestApiConnection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}