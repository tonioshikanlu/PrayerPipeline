{"ast":null,"code":"var _jsxFileName = \"/home/runner/workspace/mobile/src/navigation/AppNavigator.tsx\";\nimport React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useAuth } from \"../hooks/useAuth\";\nimport AuthScreen from \"../screens/AuthScreen\";\nimport ForgotPasswordScreen from \"../screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\nimport MainNavigator from \"./MainNavigator\";\nimport OrganizationOnboardingScreen from \"../screens/OrganizationOnboardingScreen\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function AppNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    isLoading = _useAuth.isLoading;\n  if (isLoading) {\n    return _jsxDEV(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: _jsxDEV(Stack.Screen, {\n        name: \"Loading\",\n        component: function component() {\n          return null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: !user ? _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"ResetPassword\",\n        component: ResetPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : _jsxDEV(_Fragment, {\n      children: [!user.organizationId && _jsxDEV(Stack.Screen, {\n        name: \"OrganizationOnboarding\",\n        component: OrganizationOnboardingScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Main\",\n        component: MainNavigator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","createNativeStackNavigator","useAuth","AuthScreen","ForgotPasswordScreen","ResetPasswordScreen","MainNavigator","OrganizationOnboardingScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Stack","AppNavigator","_useAuth","user","isLoading","Navigator","screenOptions","headerShown","children","Screen","name","component","fileName","_jsxFileName","lineNumber","columnNumber","organizationId"],"sources":["/home/runner/workspace/mobile/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useAuth } from '@hooks/useAuth';\nimport AuthScreen from '@screens/AuthScreen';\nimport ForgotPasswordScreen from '@screens/ForgotPasswordScreen';\nimport ResetPasswordScreen from '@screens/ResetPasswordScreen';\nimport MainNavigator from './MainNavigator';\nimport OrganizationOnboardingScreen from '@screens/OrganizationOnboardingScreen';\n\n// Type definitions for our route parameters\nexport type RootStackParamList = {\n  Auth: undefined;\n  ForgotPassword: undefined;\n  ResetPassword: { token: string };\n  OrganizationOnboarding: undefined;\n  Main: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\n/**\n * Root navigator that handles authentication flow\n */\nexport default function AppNavigator() {\n  const { user, isLoading } = useAuth();\n  \n  // Show loading state while checking auth\n  if (isLoading) {\n    return (\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"Loading\" component={() => null} />\n      </Stack.Navigator>\n    );\n  }\n  \n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!user ? (\n        // Auth screens\n        <>\n          <Stack.Screen name=\"Auth\" component={AuthScreen} />\n          <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\n          <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\n        </>\n      ) : (\n        // Main app screens\n        <>\n          {/* Onboarding screen for users without an organization */}\n          {!user.organizationId && (\n            <Stack.Screen\n              name=\"OrganizationOnboarding\"\n              component={OrganizationOnboardingScreen}\n            />\n          )}\n          <Stack.Screen name=\"Main\" component={MainNavigator} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,OAAO;AAChB,OAAOC,UAAU;AACjB,OAAOC,oBAAoB;AAC3B,OAAOC,mBAAmB;AAC1B,OAAOC,aAAa;AACpB,OAAOC,4BAA4B;AAA8C,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWjF,IAAMC,KAAK,GAAGX,0BAA0B,CAAqB,CAAC;AAK9D,eAAe,SAASY,YAAYA,CAAA,EAAG;EACrC,IAAAC,QAAA,GAA4BZ,OAAO,CAAC,CAAC;IAA7Ba,IAAI,GAAAD,QAAA,CAAJC,IAAI;IAAEC,SAAS,GAAAF,QAAA,CAATE,SAAS;EAGvB,IAAIA,SAAS,EAAE;IACb,OACEP,OAAA,CAACG,KAAK,CAACK,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAC,QAAA,EACrDX,OAAA,CAACG,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQ,IAAI;QAAA;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAEtB;EAEA,OACElB,OAAA,CAACG,KAAK,CAACK,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAC,QAAA,EACpD,CAACL,IAAI,GAEJN,OAAA,CAAAE,SAAA;MAAAS,QAAA,GACEX,OAAA,CAACG,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEpB;MAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnDlB,OAAA,CAACG,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,gBAAgB;QAACC,SAAS,EAAEnB;MAAqB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvElB,OAAA,CAACG,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAElB;MAAoB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACrE,CAAC,GAGHlB,OAAA,CAAAE,SAAA;MAAAS,QAAA,GAEG,CAACL,IAAI,CAACa,cAAc,IACnBnB,OAAA,CAACG,KAAK,CAACS,MAAM;QACXC,IAAI,EAAC,wBAAwB;QAC7BC,SAAS,EAAEhB;MAA6B;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CACF,EACDlB,OAAA,CAACG,KAAK,CAACS,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEjB;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}