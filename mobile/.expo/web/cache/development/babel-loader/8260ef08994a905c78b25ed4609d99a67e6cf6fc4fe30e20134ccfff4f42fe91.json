{"ast":null,"code":"var _jsxFileName = \"/home/runner/workspace/mobile/src/navigation/TabBar.tsx\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation, tabScreens } from \"./NavigationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar getIconName = function getIconName(screen) {\n  switch (screen) {\n    case 'Home':\n      return 'home';\n    case 'PrayerRequests':\n      return 'list';\n    case 'Groups':\n      return 'users';\n    case 'Profile':\n      return 'user';\n    default:\n      return 'circle';\n  }\n};\nvar TabBar = function TabBar(_ref) {\n  var activeScreen = _ref.activeScreen;\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate;\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: tabScreens.map(function (screen) {\n      return _jsxDEV(TouchableOpacity, {\n        style: [styles.tabButton, activeScreen === screen ? styles.activeTab : null],\n        onPress: function onPress() {\n          return navigate(screen);\n        },\n        children: [_jsxDEV(Feather, {\n          name: getIconName(screen),\n          size: 24,\n          color: activeScreen === screen ? '#3b82f6' : '#64748b'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: [styles.tabLabel, activeScreen === screen ? styles.activeLabel : null],\n          children: screen === 'PrayerRequests' ? 'Prayers' : screen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this)]\n      }, screen, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderTopWidth: 1,\n    borderTopColor: '#e2e8f0',\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    justifyContent: 'space-around'\n  },\n  tabButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    flex: 1\n  },\n  activeTab: {\n    borderRadius: 8,\n    backgroundColor: '#ebf5ff'\n  },\n  tabLabel: {\n    fontSize: 12,\n    marginTop: 4,\n    color: '#64748b'\n  },\n  activeLabel: {\n    color: '#3b82f6',\n    fontWeight: '500'\n  }\n});\nexport default TabBar;","map":{"version":3,"names":["React","View","TouchableOpacity","StyleSheet","Text","Feather","useNavigation","tabScreens","jsxDEV","_jsxDEV","getIconName","screen","TabBar","_ref","activeScreen","_useNavigation","navigate","style","styles","container","children","map","tabButton","activeTab","onPress","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","tabLabel","activeLabel","create","flexDirection","backgroundColor","borderTopWidth","borderTopColor","paddingVertical","paddingHorizontal","justifyContent","alignItems","flex","borderRadius","fontSize","marginTop","fontWeight"],"sources":["/home/runner/workspace/mobile/src/navigation/TabBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation, Screen, tabScreens } from './NavigationContext';\n\ninterface TabBarProps {\n  activeScreen: Screen;\n}\n\n// Map screens to their respective icons\nconst getIconName = (screen: Screen): string => {\n  switch (screen) {\n    case 'Home':\n      return 'home';\n    case 'PrayerRequests':\n      return 'list';\n    case 'Groups':\n      return 'users';\n    case 'Profile':\n      return 'user';\n    default:\n      return 'circle';\n  }\n};\n\nconst TabBar: React.FC<TabBarProps> = ({ activeScreen }) => {\n  const { navigate } = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      {tabScreens.map((screen) => (\n        <TouchableOpacity\n          key={screen}\n          style={[\n            styles.tabButton,\n            activeScreen === screen ? styles.activeTab : null,\n          ]}\n          onPress={() => navigate(screen)}\n        >\n          <Feather\n            name={getIconName(screen)}\n            size={24}\n            color={activeScreen === screen ? '#3b82f6' : '#64748b'}\n          />\n          <Text\n            style={[\n              styles.tabLabel,\n              activeScreen === screen ? styles.activeLabel : null,\n            ]}\n          >\n            {screen === 'PrayerRequests' ? 'Prayers' : screen}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderTopWidth: 1,\n    borderTopColor: '#e2e8f0',\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    justifyContent: 'space-around',\n  },\n  tabButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    flex: 1,\n  },\n  activeTab: {\n    borderRadius: 8,\n    backgroundColor: '#ebf5ff',\n  },\n  tabLabel: {\n    fontSize: 12,\n    marginTop: 4,\n    color: '#64748b',\n  },\n  activeLabel: {\n    color: '#3b82f6',\n    fontWeight: '500',\n  },\n});\n\nexport default TabBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}