{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/runner/workspace/mobile/src/navigation/NavigationContext.tsx\",\n  _this = this;\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var tabScreens = ['Home', 'PrayerRequests', 'Groups', 'Profile'];\nvar NavigationContext = createContext(undefined);\nexport var NavigationProvider = function NavigationProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState('Login'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    params = _useState4[0],\n    setParams = _useState4[1];\n  var _useState5 = useState([{\n      screen: 'Login',\n      params: {}\n    }]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    navigationHistory = _useState6[0],\n    setNavigationHistory = _useState6[1];\n  var navigate = useCallback(function (screen) {\n    var newParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    setCurrentScreen(screen);\n    setParams(newParams);\n    setNavigationHistory(function (prev) {\n      return [].concat(_toConsumableArray(prev), [{\n        screen: screen,\n        params: newParams\n      }]);\n    });\n  }, []);\n  var goBack = useCallback(function () {\n    if (navigationHistory.length > 1) {\n      var newHistory = _toConsumableArray(navigationHistory);\n      newHistory.pop();\n      var previous = newHistory[newHistory.length - 1];\n      setCurrentScreen(previous.screen);\n      setParams(previous.params);\n      setNavigationHistory(newHistory);\n    }\n  }, [navigationHistory]);\n  var resetToScreen = useCallback(function (screen) {\n    var newParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    setCurrentScreen(screen);\n    setParams(newParams);\n    setNavigationHistory([{\n      screen: screen,\n      params: newParams\n    }]);\n  }, []);\n  var isTabScreen = useCallback(function (screen) {\n    return tabScreens.includes(screen);\n  }, []);\n  return _jsxDEV(NavigationContext.Provider, {\n    value: {\n      currentScreen: currentScreen,\n      params: params,\n      navigationHistory: navigationHistory,\n      navigate: navigate,\n      goBack: goBack,\n      resetToScreen: resetToScreen,\n      isTabScreen: isTabScreen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, _this);\n};\nexport var useNavigation = function useNavigation() {\n  var context = useContext(NavigationContext);\n  if (!context) {\n    throw new Error('useNavigation must be used within a NavigationProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","tabScreens","NavigationContext","undefined","NavigationProvider","_ref","children","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","_useState3","_useState4","params","setParams","_useState5","screen","_useState6","navigationHistory","setNavigationHistory","navigate","newParams","arguments","length","prev","concat","_toConsumableArray","goBack","newHistory","pop","previous","resetToScreen","isTabScreen","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useNavigation","context","Error"],"sources":["/home/runner/workspace/mobile/src/navigation/NavigationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\n// Define screen types\nexport type Screen = \n  | 'Login'\n  | 'Register'\n  | 'Home'\n  | 'PrayerRequests'\n  | 'RequestDetails'\n  | 'Groups'\n  | 'GroupDetails'\n  | 'ExploreGroups'\n  | 'Profile'\n  | 'Settings'\n  | 'Organizations'\n  | 'OrganizationDetails'\n  | 'OrganizationOnboarding'\n  | 'Meetings'\n  | 'MeetingDetails'\n  | 'ForgotPassword'\n  | 'ResetPassword';\n\n// Define tab screens\nexport const tabScreens: Screen[] = [\n  'Home', \n  'PrayerRequests', \n  'Groups', \n  'Profile'\n];\n\n// Define parameters for navigation\nexport type NavigationParams = Record<string, any>;\n\ninterface NavigationContextType {\n  currentScreen: Screen;\n  params: NavigationParams;\n  navigationHistory: Array<{ screen: Screen; params: NavigationParams }>;\n  navigate: (screen: Screen, params?: NavigationParams) => void;\n  goBack: () => void;\n  resetToScreen: (screen: Screen, params?: NavigationParams) => void;\n  isTabScreen: (screen: Screen) => boolean;\n}\n\nconst NavigationContext = createContext<NavigationContextType | undefined>(undefined);\n\nexport const NavigationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentScreen, setCurrentScreen] = useState<Screen>('Login');\n  const [params, setParams] = useState<NavigationParams>({});\n  const [navigationHistory, setNavigationHistory] = useState<Array<{ screen: Screen; params: NavigationParams }>>([\n    { screen: 'Login', params: {} }\n  ]);\n\n  const navigate = useCallback((screen: Screen, newParams: NavigationParams = {}) => {\n    setCurrentScreen(screen);\n    setParams(newParams);\n    setNavigationHistory(prev => [...prev, { screen, params: newParams }]);\n  }, []);\n\n  const goBack = useCallback(() => {\n    if (navigationHistory.length > 1) {\n      const newHistory = [...navigationHistory];\n      newHistory.pop(); // Remove current screen\n      const previous = newHistory[newHistory.length - 1];\n      setCurrentScreen(previous.screen);\n      setParams(previous.params);\n      setNavigationHistory(newHistory);\n    }\n  }, [navigationHistory]);\n\n  const resetToScreen = useCallback((screen: Screen, newParams: NavigationParams = {}) => {\n    setCurrentScreen(screen);\n    setParams(newParams);\n    setNavigationHistory([{ screen, params: newParams }]);\n  }, []);\n\n  const isTabScreen = useCallback((screen: Screen): boolean => {\n    return tabScreens.includes(screen);\n  }, []);\n\n  return (\n    <NavigationContext.Provider\n      value={{\n        currentScreen,\n        params,\n        navigationHistory,\n        navigate,\n        goBack,\n        resetToScreen,\n        isTabScreen\n      }}\n    >\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport const useNavigation = (): NavigationContextType => {\n  const context = useContext(NavigationContext);\n  if (!context) {\n    throw new Error('useNavigation must be used within a NavigationProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}